@inject Hub.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
   const string cardId = "dash-useractivitylog-card";
   const string hideCardAttributeName = "Reports.HideUserActivityLogCard";
   var hideCard = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideCardAttributeName);
}

<div class="card card-primary card-outline @if(hideCard){<text>collapsed-card</text>}" id="@cardId">
   <div class="card-header with-border">
      <h3 class="card-title">
         <i class="far fa-user"></i>
         @T("Admin.Dashboard.UserActivityLog")
         <a asp-controller="UserActivityLog" asp-action="ActivityLogs" class="btn btn-xs btn-info btn-flat margin-l-10">@T("Admin.Dashboard.UserActivityLog.ViewAll")</a>
      </h3>
      <div class="card-tools float-right">
         <button class="btn btn-tool" data-card-widget="collapse">
            @if (hideCard)
            {
               <text><i class="fas fa-plus"></i></text>
            }
            else
            {
               <text><i class="fas fa-minus"></i></text>
            }
         </button>
      </div>
   </div>
   <script>
      $(document).ready(function () {
         $('#@cardId').on('click', 'button[data-card-widget="collapse"]', function () {
            var collapsed = !$('#@cardId').hasClass('collapsed-card');
            saveUserPreferences('@(Url.Action("SavePreference", "Preferences"))', '@hideCardAttributeName', collapsed);
         });
      });
   </script>
   <div class="card-body" style="padding-bottom: 22px;">
      @await Html.PartialAsync("Table", new DataTablesModel
      {
          Name = "user-activityLog-grid",
          UrlRead = new DataUrl("ListLogs", "UserActivityLog", null),
          Length = 10,
          Paging = true, 
          Info = true,
          ColumnCollection = new List<ColumnProperty>
          {
              new ColumnProperty(nameof(ActivityLogModel.ActivityLogTypeName))
              {
                  Title = T("Admin.Users.ActivityLog.Fields.ActivityLogType").Text,
                  Width = "100"
              },
              new ColumnProperty(nameof(ActivityLogModel.Subject))
              {
                  Title = T("Admin.Users.ActivityLog.Fields.User").Text,
                  Width = "100",
                  Render = new RenderLink(new DataUrl("~/Admin/User/Edit", nameof(ActivityLogModel.SubjectId)))
              },
              new ColumnProperty(nameof(ActivityLogModel.Comment))
              {
                  Title = T("Admin.Users.ActivityLog.Fields.Comment").Text,
                  Width = "200",
              },
              new ColumnProperty(nameof(ActivityLogModel.CreatedOn))
              {
                  Title = T("Admin.Users.ActivityLog.Fields.CreatedOn").Text,
                  Width = "130",
                  Render = new RenderDate()
              }
          }
      })
   </div>
</div>