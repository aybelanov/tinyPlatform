@using Hub.Core
@inject Hub.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
   const string prefix = "device-statistics";
   const string hideCardAttributeName = "Reports.HideDeviceStatisticsCard";
   var hideCard = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideCardAttributeName);
}

<script src="~/lib_npm/chart.js/Chart.min.js" asp-location="Head"></script>

<div class="card card-primary card-outline @if (hideCard){<text>collapsed-card</text>}" id="@(prefix)-card">
   <div class="card-header with-border">
      <h3 class="card-title">
         <i class="far fa-hdd"></i>
         @T("Admin.Reports.Device.DeviceStatistics")
      </h3>
      <div class="card-tools float-right">
         <button class="btn btn-xs btn-info btn-flat margin-r-5" @if (hideCard) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="year">@T("Admin.Reports.Device.DeviceStatistics.Year")</button>
         <button class="btn btn-xs btn-info btn-flat margin-r-5" @if (hideCard) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="month">@T("Admin.Reports.Device.DeviceStatistics.Month")</button>
         <button class="btn btn-xs btn-info btn-flat" @if (hideCard) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="week">@T("Admin.Reports.Device.DeviceStatistics.Week")</button>
         <button class="btn btn-tool margin-l-10" data-card-widget="collapse">
            @if (hideCard)
            {
               <text><i class="fas fa-plus"></i></text>
            }
            else
            {
               <text><i class="fas fa-minus"></i></text>
            }
         </button>
      </div>
   </div>
   <div class="card-body">
      <div class="chart" style="height: 300px;">
         <canvas id="@(prefix)-chart" height="300"></canvas>
      </div>
   </div>
</div>

<script>
   $(document).ready(function () {
      var csCurrentPeriod;

      $('#@(prefix)-card').on('click', 'button[data-card-widget="collapse"]', function () {

         var collapsed = !$('#@(prefix)-card').hasClass('collapsed-card');
         saveUserPreferences('@(Url.Action("SavePreference", "Preferences"))', '@hideCardAttributeName', collapsed);

         if (!collapsed) {
            $('#@(prefix)-card button[data-chart-role="toggle-chart"]').removeAttr('disabled');
            if (!csCurrentPeriod) {
               $('#@(prefix)-card button[data-chart-role="toggle-chart"][data-chart-period="week"]').trigger('click');
            }
         } else {
            $('#@(prefix)-card button[data-chart-role="toggle-chart"]').attr('disabled', 'disabled');
         }
      });

      var csConfig = {
         type: 'line',
         data: {
            labels: [],
            datasets: [
               {
                  label: "@T("Admin.Reports.Device.DeviceStatistics")",
                  fillColor: "rgba(60,141,188,0.9)",
                  strokeColor: "rgba(60,141,188,0.8)",
                  pointColor: "#00a65a",
                  pointStrokeColor: "rgba(0,166,90,1)",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(0,166,90,1)",
                  borderColor: 'rgba(0,166,90, 1)',
                  backgroundColor: 'rgba(0,166,90,0.5)',
                  pointBorderColor: 'rgba(0,166,90,0.7)',
                  pointBackgroundColor: 'rgba(0,166,90,0.2)',
                  pointBorderWidth: 1,
                  data: []
               }
            ]
         },
         options: {
            legend: {
               display: false
            },
            scales: {
               xAxes: [{
                  display: true,
                  ticks: {
                     userCallback: function (dataLabel, index) {
                        if (window.deviceStatistics && window.deviceStatistics.config.data.labels.length > 12) {
                           return index % 5 === 0 ? dataLabel : '';
                        }
                        return dataLabel;
                     }
                  }
               }],
               yAxes: [{
                  display: true,
                  ticks: {
                     userCallback: function (dataLabel, index) {
                        return (dataLabel ^ 0) === dataLabel ? dataLabel : '';
                     },
                     min: 0
                  }
               }]
            },
            showScale: true,
            scaleShowGridLines: false,
            scaleGridLineColor: "rgba(0,0,0,.05)",
            scaleGridLineWidth: 1,
            scaleShowHorizontalLines: true,
            scaleShowVerticalLines: true,
            bezierCurve: true,
            pointDot: false,
            pointDotRadius: 4,
            pointDotStrokeWidth: 1,
            pointHitDetectionRadius: 20,
            datasetStroke: true,
            datasetFill: true,
            maintainAspectRatio: false,
            responsive: true
         }
      };

      function changeCsPeriod(period) {
         var csLabels = [];
         var csData = [];

         $.ajax({
            cache: false,
            type: "GET",
            url: "@Url.Action("LoadDeviceStatistics", "Device")",
            data: {
               period: period
            },
            success: function (data, textStatus, jqXHR) {
               for (var i = 0; i < data.length; i++) {
                  csLabels.push(data[i].date);
                  csData.push(data[i].value);
               }

               if (!window.deviceStatistics) {
                  csConfig.data.labels = csLabels;
                  csConfig.data.datasets[0].data = csData;
                  csConfig.data.scales =
                     window.deviceStatistics = new Chart(document.getElementById("@prefix-chart").getContext("2d"), csConfig);
               } else {
                  window.deviceStatistics.config.data.labels = csLabels;
                  window.deviceStatistics.config.data.datasets[0].data = csData;
                  window.deviceStatistics.update();
               }
            },
            error: function (jqXHR, textStatus, errorThrown) {
               $("#loadUserStatisticsAlert").click();
            }
         });
      }

      $('#@(prefix)-card button[data-chart-role="toggle-chart"]').on('click', function () {
         var period = $(this).attr('data-chart-period');
         csCurrentPeriod = period;
         changeCsPeriod(period);
         $('#@(prefix)-card button[data-chart-role="toggle-chart"]').removeClass('bg-light-blue');
         $(this).addClass('bg-light-blue');
      });

   @if (!hideCard)
   {
      <text>
            $('#@(prefix)-card button[data-chart-role="toggle-chart"][data-chart-period="week"]').trigger('click');
      </text>
   }
       });
</script>