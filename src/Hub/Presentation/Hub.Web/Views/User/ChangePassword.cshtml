@model ChangePasswordModel
@{
   Layout = "_ColumnsTwo";

   //title
   AppHtml.AddTitleParts(T("PageTitle.Account").Text);
   //page class
   AppHtml.AppendPageCssClassParts("html-account-page");
   AppHtml.AppendPageCssClassParts("html-change-password-page");
   var returnUrl = Context.Request.Query["returnUrl"];
}
@section left
   {
   @await Component.InvokeAsync("UserNavigation", new { selectedTabId = UserNavigationEnum.ChangePassword })
}

<div class="page account-page change-password-page">
   <div class="page-title">
      <h2>@T("Account.MyAccount") - @T("Account.ChangePassword")</h2>
   </div>
   <div class="page-body">
      <form asp-route="UserChangePassword" method="post" autocomplete="off" asp-route-returnurl="@returnUrl">
         <div asp-validation-summary="ModelOnly" class="message-error"></div>
         <div class="fieldset">
            <div class="form-fields">
               <div class="inputs">
                  <label asp-for="OldPassword" asp-postfix=":"></label>
                  <input asp-for="OldPassword" />
                  <app-required />
                  <span asp-validation-for="OldPassword"></span>
               </div>
               <div class="inputs">
                  <label asp-for="NewPassword" asp-postfix=":"></label>
                  <input asp-for="NewPassword" />
                  <app-required />
                  <span asp-validation-for="NewPassword"></span>
               </div>
               <div class="inputs">
                  <label asp-for="ConfirmNewPassword" asp-postfix=":"></label>
                  <input asp-for="ConfirmNewPassword" />
                  <app-required />
                  <span asp-validation-for="ConfirmNewPassword"></span>
               </div>
            </div>
         </div>
         <div class="buttons">
            <button type="submit" class="button-1 change-password-button">@T("Account.ChangePassword.Button")</button>
         </div>
      </form>
   </div>
</div>