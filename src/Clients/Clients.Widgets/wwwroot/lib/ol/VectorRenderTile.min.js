/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/VectorRenderTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Tile from"./Tile.js";import{createCanvasContext2D,releaseCanvas}from"./dom.js";import{getUid}from"./util.js";const canvasPool=[];class VectorRenderTile extends Tile{constructor(e,t,s,i){super(e,t,{transition:0}),this.context_={},this.executorGroups={},this.declutterExecutorGroups={},this.loadingSourceTiles=0,this.hitDetectionImageData={},this.replayState_={},this.sourceTiles=[],this.errorTileKeys={},this.wantedResolution,this.getSourceTiles=i.bind(void 0,this),this.wrappedTileCoord=s}getContext(e){const t=getUid(e);return t in this.context_||(this.context_[t]=createCanvasContext2D(1,1,canvasPool)),this.context_[t]}hasContext(e){return getUid(e)in this.context_}getImage(e){return this.hasContext(e)?this.getContext(e).canvas:null}getReplayState(e){const t=getUid(e);return t in this.replayState_||(this.replayState_[t]={dirty:!1,renderedRenderOrder:null,renderedResolution:NaN,renderedRevision:-1,renderedTileResolution:NaN,renderedTileRevision:-1,renderedTileZ:-1}),this.replayState_[t]}load(){this.getSourceTiles()}release(){for(const e in this.context_){const t=this.context_[e];releaseCanvas(t),canvasPool.push(t.canvas),delete this.context_[e]}super.release()}}export default VectorRenderTile;
//# sourceMappingURL=/sm/afe568d107cd918108de977e89c0b533590a9b40becfd49f3187e7171f4d6fc8.map