/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/tilegrid.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TileGrid from"./tilegrid/TileGrid.js";import{DEFAULT_MAX_ZOOM,DEFAULT_TILE_SIZE}from"./tilegrid/common.js";import{METERS_PER_UNIT,get as getProjection}from"./proj.js";import{containsCoordinate,createOrUpdate,getCorner,getHeight,getWidth}from"./extent.js";import{toSize}from"./size.js";export function getForProjection(t){let e=t.getDefaultTileGrid();return e||(e=createForProjection(t),t.setDefaultTileGrid(e)),e}export function wrapX(t,e,o){const r=e[0],i=t.getTileCoordCenter(e),n=extentFromProjection(o);if(!containsCoordinate(n,i)){const e=getWidth(n),o=Math.ceil((n[0]-i[0])/e);return i[0]+=e*o,t.getTileCoordForCoordAndZ(i,r)}return e}export function createForExtent(t,e,o,r){r=void 0!==r?r:"top-left";const i=resolutionsFromExtent(t,e,o);return new TileGrid({extent:t,origin:getCorner(t,r),resolutions:i,tileSize:o})}export function createXYZ(t){const e=t||{},o=e.extent||getProjection("EPSG:3857").getExtent(),r={extent:o,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:resolutionsFromExtent(o,e.maxZoom,e.tileSize,e.maxResolution)};return new TileGrid(r)}function resolutionsFromExtent(t,e,o,r){e=void 0!==e?e:DEFAULT_MAX_ZOOM,o=toSize(void 0!==o?o:DEFAULT_TILE_SIZE);const i=getHeight(t),n=getWidth(t);r=r>0?r:Math.max(n/o[0],i/o[1]);const c=e+1,s=new Array(c);for(let t=0;t<c;++t)s[t]=r/Math.pow(2,t);return s}export function createForProjection(t,e,o,r){return createForExtent(extentFromProjection(t),e,o,r)}export function extentFromProjection(t){let e=(t=getProjection(t)).getExtent();if(!e){const o=180*METERS_PER_UNIT.degrees/t.getMetersPerUnit();e=createOrUpdate(-o,-o,o,o)}return e}
//# sourceMappingURL=/sm/835b2f7f895f858f08241666ebac2952f047eea54f22dc40b4eb48b56705fa32.map