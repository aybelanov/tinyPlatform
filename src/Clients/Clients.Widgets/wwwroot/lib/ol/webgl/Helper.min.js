/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/webgl/Helper.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ContextEventType from"../webgl/ContextEventType.js";import Disposable from"../Disposable.js";import WebGLPostProcessingPass from"./PostProcessingPass.js";import{FLOAT,UNSIGNED_BYTE,UNSIGNED_INT,UNSIGNED_SHORT,getContext}from"../webgl.js";import{clear}from"../obj.js";import{compose as composeTransform,create as createTransform}from"../transform.js";import{create,fromTransform}from"../vec/mat4.js";import{getUid}from"../util.js";export const ShaderType={FRAGMENT_SHADER:35632,VERTEX_SHADER:35633};export const DefaultUniform={PROJECTION_MATRIX:"u_projectionMatrix",SCREEN_TO_WORLD_MATRIX:"u_screenToWorldMatrix",TIME:"u_time",ZOOM:"u_zoom",RESOLUTION:"u_resolution",ROTATION:"u_rotation",VIEWPORT_SIZE_PX:"u_viewportSizePx",PIXEL_RATIO:"u_pixelRatio",HIT_DETECTION:"u_hitDetection"};export const AttributeType={UNSIGNED_BYTE:UNSIGNED_BYTE,UNSIGNED_SHORT:UNSIGNED_SHORT,UNSIGNED_INT:UNSIGNED_INT,FLOAT:FLOAT};const canvasCache={};function getSharedCanvasCacheKey(e){return"shared/"+e}let uniqueCanvasCacheKeyCount=0;function getUniqueCanvasCacheKey(){const e="unique/"+uniqueCanvasCacheKeyCount;return uniqueCanvasCacheKeyCount+=1,e}function getOrCreateContext(e){let t=canvasCache[e];if(!t){const r=document.createElement("canvas");r.width=1,r.height=1,r.style.position="absolute",r.style.left="0";t={users:0,context:getContext(r)},canvasCache[e]=t}return t.users+=1,t.context}function releaseCanvas(e){const t=canvasCache[e];if(!t)return;if(t.users-=1,t.users>0)return;const r=t.context,s=r.getExtension("WEBGL_lose_context");s&&s.loseContext();const a=r.canvas;a.width=1,a.height=1,delete canvasCache[e]}class WebGLHelper extends Disposable{constructor(e){super(),e=e||{},this.boundHandleWebGLContextLost_=this.handleWebGLContextLost.bind(this),this.boundHandleWebGLContextRestored_=this.handleWebGLContextRestored.bind(this),this.canvasCacheKey_=e.canvasCacheKey?getSharedCanvasCacheKey(e.canvasCacheKey):getUniqueCanvasCacheKey(),this.gl_=getOrCreateContext(this.canvasCacheKey_),this.bufferCache_={},this.extensionCache_={},this.currentProgram_=null,this.needsToBeRecreated_=!1;const t=this.gl_.canvas;t.addEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),t.addEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),this.offsetRotateMatrix_=createTransform(),this.offsetScaleMatrix_=createTransform(),this.tmpMat4_=create(),this.uniformLocationsByProgram_={},this.attribLocationsByProgram_={},this.uniforms_=[],e.uniforms&&this.setUniforms(e.uniforms),this.postProcessPasses_=e.postProcesses?e.postProcesses.map((e=>new WebGLPostProcessingPass({webGlContext:this.gl_,scaleRatio:e.scaleRatio,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms}))):[new WebGLPostProcessingPass({webGlContext:this.gl_})],this.shaderCompileErrors_=null,this.startTime_=Date.now()}setUniforms(e){this.uniforms_=[],this.addUniforms(e)}addUniforms(e){for(const t in e)this.uniforms_.push({name:t,value:e[t]})}canvasCacheKeyMatches(e){return this.canvasCacheKey_===getSharedCanvasCacheKey(e)}getExtension(e){if(e in this.extensionCache_)return this.extensionCache_[e];const t=this.gl_.getExtension(e);return this.extensionCache_[e]=t,t}bindBuffer(e){const t=this.gl_,r=getUid(e);let s=this.bufferCache_[r];if(!s){s={buffer:e,webGlBuffer:t.createBuffer()},this.bufferCache_[r]=s}t.bindBuffer(e.getType(),s.webGlBuffer)}flushBufferData(e){const t=this.gl_;this.bindBuffer(e),t.bufferData(e.getType(),e.getArray(),e.getUsage())}deleteBuffer(e){const t=this.gl_,r=getUid(e),s=this.bufferCache_[r];s&&!t.isContextLost()&&t.deleteBuffer(s.webGlBuffer),delete this.bufferCache_[r]}disposeInternal(){const e=this.gl_.canvas;e.removeEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),e.removeEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),releaseCanvas(this.canvasCacheKey_),delete this.gl_}prepareDraw(e,t,r){const s=this.gl_,a=this.getCanvas(),o=e.size,i=e.pixelRatio;a.width===o[0]*i&&a.height===o[1]*i||(a.width=o[0]*i,a.height=o[1]*i,a.style.width=o[0]+"px",a.style.height=o[1]+"px");for(let t=this.postProcessPasses_.length-1;t>=0;t--)this.postProcessPasses_[t].init(e);s.bindTexture(s.TEXTURE_2D,null),s.clearColor(0,0,0,0),s.depthRange(0,1),s.clearDepth(1),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),s.enable(s.BLEND),s.blendFunc(s.ONE,t?s.ZERO:s.ONE_MINUS_SRC_ALPHA),r?(s.enable(s.DEPTH_TEST),s.depthFunc(s.LEQUAL)):s.disable(s.DEPTH_TEST)}bindTexture(e,t,r){const s=this.gl_;s.activeTexture(s.TEXTURE0+t),s.bindTexture(s.TEXTURE_2D,e),s.uniform1i(this.getUniformLocation(r),t)}prepareDrawToRenderTarget(e,t,r,s){const a=this.gl_,o=t.getSize();a.bindFramebuffer(a.FRAMEBUFFER,t.getFramebuffer()),a.bindRenderbuffer(a.RENDERBUFFER,t.getDepthbuffer()),a.viewport(0,0,o[0],o[1]),a.bindTexture(a.TEXTURE_2D,t.getTexture()),a.clearColor(0,0,0,0),a.depthRange(0,1),a.clearDepth(1),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),a.enable(a.BLEND),a.blendFunc(a.ONE,r?a.ZERO:a.ONE_MINUS_SRC_ALPHA),s?(a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL)):a.disable(a.DEPTH_TEST)}drawElements(e,t){const r=this.gl_;this.getExtension("OES_element_index_uint");const s=r.UNSIGNED_INT,a=t-e,o=4*e;r.drawElements(r.TRIANGLES,a,s,o)}finalizeDraw(e,t,r){for(let s=0,a=this.postProcessPasses_.length;s<a;s++)s===a-1?this.postProcessPasses_[s].apply(e,null,t,r):this.postProcessPasses_[s].apply(e,this.postProcessPasses_[s+1])}getCanvas(){return this.gl_.canvas}getGL(){return this.gl_}applyFrameState(e){const t=e.size,r=e.viewState.rotation,s=e.pixelRatio;this.setUniformFloatValue(DefaultUniform.TIME,.001*(Date.now()-this.startTime_)),this.setUniformFloatValue(DefaultUniform.ZOOM,e.viewState.zoom),this.setUniformFloatValue(DefaultUniform.RESOLUTION,e.viewState.resolution),this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO,s),this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX,[t[0],t[1]]),this.setUniformFloatValue(DefaultUniform.ROTATION,r)}applyHitDetectionUniform(e){const t=this.getUniformLocation(DefaultUniform.HIT_DETECTION);this.getGL().uniform1i(t,e?1:0),e&&this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO,.5)}applyUniforms(e){const t=this.gl_;let r,s=0;this.uniforms_.forEach((a=>{if(r="function"==typeof a.value?a.value(e):a.value,r instanceof HTMLCanvasElement||r instanceof HTMLImageElement||r instanceof ImageData){a.texture||(a.prevValue=void 0,a.texture=t.createTexture()),this.bindTexture(a.texture,s,a.name),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);(!(r instanceof HTMLImageElement)||r.complete)&&a.prevValue!==r&&(a.prevValue=r,t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)),s++}else if(Array.isArray(r)&&6===r.length)this.setUniformMatrixValue(a.name,fromTransform(this.tmpMat4_,r));else if(Array.isArray(r)&&r.length<=4)switch(r.length){case 2:return void t.uniform2f(this.getUniformLocation(a.name),r[0],r[1]);case 3:return void t.uniform3f(this.getUniformLocation(a.name),r[0],r[1],r[2]);case 4:return void t.uniform4f(this.getUniformLocation(a.name),r[0],r[1],r[2],r[3]);default:return}else"number"==typeof r&&t.uniform1f(this.getUniformLocation(a.name),r)}))}useProgram(e,t){this.gl_.useProgram(e),this.currentProgram_=e,this.applyFrameState(t),this.applyUniforms(t)}compileShader(e,t){const r=this.gl_,s=r.createShader(t);return r.shaderSource(s,e),r.compileShader(s),s}getProgram(e,t){const r=this.gl_,s=this.compileShader(e,r.FRAGMENT_SHADER),a=this.compileShader(t,r.VERTEX_SHADER),o=r.createProgram();if(r.attachShader(o,s),r.attachShader(o,a),r.linkProgram(o),!r.getShaderParameter(s,r.COMPILE_STATUS)){const e=`Fragment shader compilation failed: ${r.getShaderInfoLog(s)}`;throw new Error(e)}if(r.deleteShader(s),!r.getShaderParameter(a,r.COMPILE_STATUS)){const e=`Vertex shader compilation failed: ${r.getShaderInfoLog(a)}`;throw new Error(e)}if(r.deleteShader(a),!r.getProgramParameter(o,r.LINK_STATUS)){const e=`GL program linking failed: ${r.getProgramInfoLog(o)}`;throw new Error(e)}return o}getUniformLocation(e){const t=getUid(this.currentProgram_);return void 0===this.uniformLocationsByProgram_[t]&&(this.uniformLocationsByProgram_[t]={}),void 0===this.uniformLocationsByProgram_[t][e]&&(this.uniformLocationsByProgram_[t][e]=this.gl_.getUniformLocation(this.currentProgram_,e)),this.uniformLocationsByProgram_[t][e]}getAttributeLocation(e){const t=getUid(this.currentProgram_);return void 0===this.attribLocationsByProgram_[t]&&(this.attribLocationsByProgram_[t]={}),void 0===this.attribLocationsByProgram_[t][e]&&(this.attribLocationsByProgram_[t][e]=this.gl_.getAttribLocation(this.currentProgram_,e)),this.attribLocationsByProgram_[t][e]}makeProjectionTransform(e,t){const r=e.size,s=e.viewState.rotation,a=e.viewState.resolution,o=e.viewState.center;return composeTransform(t,0,0,2/(a*r[0]),2/(a*r[1]),-s,-o[0],-o[1]),t}setUniformFloatValue(e,t){this.gl_.uniform1f(this.getUniformLocation(e),t)}setUniformFloatVec2(e,t){this.gl_.uniform2fv(this.getUniformLocation(e),t)}setUniformFloatVec4(e,t){this.gl_.uniform4fv(this.getUniformLocation(e),t)}setUniformMatrixValue(e,t){this.gl_.uniformMatrix4fv(this.getUniformLocation(e),!1,t)}enableAttributeArray_(e,t,r,s,a){const o=this.getAttributeLocation(e);o<0||(this.gl_.enableVertexAttribArray(o),this.gl_.vertexAttribPointer(o,t,r,!1,s,a))}enableAttributes(e){const t=computeAttributesStride(e);let r=0;for(let s=0;s<e.length;s++){const a=e[s];this.enableAttributeArray_(a.name,a.size,a.type||FLOAT,t,r),r+=a.size*getByteSizeFromType(a.type)}}handleWebGLContextLost(e){clear(this.bufferCache_),this.currentProgram_=null,e.preventDefault()}handleWebGLContextRestored(){this.needsToBeRecreated_=!0}needsToBeRecreated(){return this.needsToBeRecreated_}createTexture(e,t,r){const s=this.gl_;r=r||s.createTexture();const a=s.RGBA,o=s.RGBA,i=s.UNSIGNED_BYTE;return s.bindTexture(s.TEXTURE_2D,r),t?s.texImage2D(s.TEXTURE_2D,0,a,o,i,t):s.texImage2D(s.TEXTURE_2D,0,a,e[0],e[1],0,o,i,null),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.LINEAR),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),r}}export function computeAttributesStride(e){let t=0;for(let r=0;r<e.length;r++){const s=e[r];t+=s.size*getByteSizeFromType(s.type)}return t}function getByteSizeFromType(e){switch(e){case AttributeType.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;case AttributeType.FLOAT:default:return Float32Array.BYTES_PER_ELEMENT}}export default WebGLHelper;
//# sourceMappingURL=/sm/70669676fd6a975b011ad6d1c17435aaca4f450f37da04c81ded427d1caab4fa.map