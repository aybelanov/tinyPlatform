/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/webgl/PostProcessingPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getUid}from"../util.js";const DEFAULT_VERTEX_SHADER="\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n",DEFAULT_FRAGMENT_SHADER="\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n";class WebGLPostProcessingPass{constructor(e){this.gl_=e.webGlContext;const r=this.gl_;this.scaleRatio_=e.scaleRatio||1,this.renderTargetTexture_=r.createTexture(),this.renderTargetTextureSize_=null,this.frameBuffer_=r.createFramebuffer(),this.depthBuffer_=r.createRenderbuffer();const t=r.createShader(r.VERTEX_SHADER);r.shaderSource(t,e.vertexShader||DEFAULT_VERTEX_SHADER),r.compileShader(t);const i=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(i,e.fragmentShader||DEFAULT_FRAGMENT_SHADER),r.compileShader(i),this.renderTargetProgram_=r.createProgram(),r.attachShader(this.renderTargetProgram_,t),r.attachShader(this.renderTargetProgram_,i),r.linkProgram(this.renderTargetProgram_),this.renderTargetVerticesBuffer_=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),r.STATIC_DRAW),this.renderTargetAttribLocation_=r.getAttribLocation(this.renderTargetProgram_,"a_position"),this.renderTargetUniformLocation_=r.getUniformLocation(this.renderTargetProgram_,"u_screenSize"),this.renderTargetOpacityLocation_=r.getUniformLocation(this.renderTargetProgram_,"u_opacity"),this.renderTargetTextureLocation_=r.getUniformLocation(this.renderTargetProgram_,"u_image"),this.uniforms_=[],e.uniforms&&Object.keys(e.uniforms).forEach((t=>{this.uniforms_.push({value:e.uniforms[t],location:r.getUniformLocation(this.renderTargetProgram_,t)})}))}getGL(){return this.gl_}init(e){const r=this.getGL(),t=[r.drawingBufferWidth*this.scaleRatio_,r.drawingBufferHeight*this.scaleRatio_];if(r.bindFramebuffer(r.FRAMEBUFFER,this.getFrameBuffer()),r.bindRenderbuffer(r.RENDERBUFFER,this.getDepthBuffer()),r.viewport(0,0,t[0],t[1]),!this.renderTargetTextureSize_||this.renderTargetTextureSize_[0]!==t[0]||this.renderTargetTextureSize_[1]!==t[1]){this.renderTargetTextureSize_=t;const e=0,i=r.RGBA,a=0,n=r.RGBA,o=r.UNSIGNED_BYTE,T=null;r.bindTexture(r.TEXTURE_2D,this.renderTargetTexture_),r.texImage2D(r.TEXTURE_2D,e,i,t[0],t[1],a,n,o,T),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.renderTargetTexture_,0),r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_COMPONENT16,t[0],t[1]),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,this.depthBuffer_)}}apply(e,r,t,i){const a=this.getGL(),n=e.size;if(a.bindFramebuffer(a.FRAMEBUFFER,r?r.getFrameBuffer():null),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,this.renderTargetTexture_),!r){const r=getUid(a.canvas);if(!e.renderTargets[r]){const t=a.getContextAttributes();t&&t.preserveDrawingBuffer&&(a.clearColor(0,0,0,0),a.clearDepth(1),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT)),e.renderTargets[r]=!0}}a.disable(a.DEPTH_TEST),a.enable(a.BLEND),a.blendFunc(a.ONE,a.ONE_MINUS_SRC_ALPHA),a.viewport(0,0,a.drawingBufferWidth,a.drawingBufferHeight),a.bindBuffer(a.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),a.useProgram(this.renderTargetProgram_),a.enableVertexAttribArray(this.renderTargetAttribLocation_),a.vertexAttribPointer(this.renderTargetAttribLocation_,2,a.FLOAT,!1,0,0),a.uniform2f(this.renderTargetUniformLocation_,n[0],n[1]),a.uniform1i(this.renderTargetTextureLocation_,0);const o=e.layerStatesArray[e.layerIndex].opacity;a.uniform1f(this.renderTargetOpacityLocation_,o),this.applyUniforms(e),t&&t(a,e),a.drawArrays(a.TRIANGLES,0,6),i&&i(a,e)}getFrameBuffer(){return this.frameBuffer_}getDepthBuffer(){return this.depthBuffer_}applyUniforms(e){const r=this.getGL();let t,i=1;this.uniforms_.forEach((function(a){if(t="function"==typeof a.value?a.value(e):a.value,t instanceof HTMLCanvasElement||t instanceof ImageData)a.texture||(a.texture=r.createTexture()),r.activeTexture(r[`TEXTURE${i}`]),r.bindTexture(r.TEXTURE_2D,a.texture),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),t instanceof ImageData?r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,t.width,t.height,0,r.UNSIGNED_BYTE,new Uint8Array(t.data)):r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t),r.uniform1i(a.location,i++);else if(Array.isArray(t))switch(t.length){case 2:return void r.uniform2f(a.location,t[0],t[1]);case 3:return void r.uniform3f(a.location,t[0],t[1],t[2]);case 4:return void r.uniform4f(a.location,t[0],t[1],t[2],t[3]);default:return}else"number"==typeof t&&r.uniform1f(a.location,t)}))}}export default WebGLPostProcessingPass;
//# sourceMappingURL=/sm/8af30721f4d6be95025a9d75c6dc6071596999d2ffd9152241d92fba22e8c844.map