/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/Geolocation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BaseEvent from"./events/Event.js";import BaseObject from"./Object.js";import{circular as circularPolygon}from"./geom/Polygon.js";import{get as getProjection,getTransformFromProjections,identityTransform}from"./proj.js";import{toRadians}from"./math.js";const Property={ACCURACY:"accuracy",ACCURACY_GEOMETRY:"accuracyGeometry",ALTITUDE:"altitude",ALTITUDE_ACCURACY:"altitudeAccuracy",HEADING:"heading",POSITION:"position",PROJECTION:"projection",SPEED:"speed",TRACKING:"tracking",TRACKING_OPTIONS:"trackingOptions"},GeolocationErrorType={ERROR:"error"};export class GeolocationError extends BaseEvent{constructor(t){super(GeolocationErrorType.ERROR),this.code=t.code,this.message=t.message}}class Geolocation extends BaseObject{constructor(t){super(),this.on,this.once,this.un,t=t||{},this.position_=null,this.transform_=identityTransform,this.watchId_=void 0,this.addChangeListener(Property.PROJECTION,this.handleProjectionChanged_),this.addChangeListener(Property.TRACKING,this.handleTrackingChanged_),void 0!==t.projection&&this.setProjection(t.projection),void 0!==t.trackingOptions&&this.setTrackingOptions(t.trackingOptions),this.setTracking(void 0!==t.tracking&&t.tracking)}disposeInternal(){this.setTracking(!1),super.disposeInternal()}handleProjectionChanged_(){const t=this.getProjection();t&&(this.transform_=getTransformFromProjections(getProjection("EPSG:4326"),t),this.position_&&this.set(Property.POSITION,this.transform_(this.position_)))}handleTrackingChanged_(){if("geolocation"in navigator){const t=this.getTracking();t&&void 0===this.watchId_?this.watchId_=navigator.geolocation.watchPosition(this.positionChange_.bind(this),this.positionError_.bind(this),this.getTrackingOptions()):t||void 0===this.watchId_||(navigator.geolocation.clearWatch(this.watchId_),this.watchId_=void 0)}}positionChange_(t){const i=t.coords;this.set(Property.ACCURACY,i.accuracy),this.set(Property.ALTITUDE,null===i.altitude?void 0:i.altitude),this.set(Property.ALTITUDE_ACCURACY,null===i.altitudeAccuracy?void 0:i.altitudeAccuracy),this.set(Property.HEADING,null===i.heading?void 0:toRadians(i.heading)),this.position_?(this.position_[0]=i.longitude,this.position_[1]=i.latitude):this.position_=[i.longitude,i.latitude];const o=this.transform_(this.position_);this.set(Property.POSITION,o.slice()),this.set(Property.SPEED,null===i.speed?void 0:i.speed);const e=circularPolygon(this.position_,i.accuracy);e.applyTransform(this.transform_),this.set(Property.ACCURACY_GEOMETRY,e),this.changed()}positionError_(t){this.dispatchEvent(new GeolocationError(t))}getAccuracy(){return this.get(Property.ACCURACY)}getAccuracyGeometry(){return this.get(Property.ACCURACY_GEOMETRY)||null}getAltitude(){return this.get(Property.ALTITUDE)}getAltitudeAccuracy(){return this.get(Property.ALTITUDE_ACCURACY)}getHeading(){return this.get(Property.HEADING)}getPosition(){return this.get(Property.POSITION)}getProjection(){return this.get(Property.PROJECTION)}getSpeed(){return this.get(Property.SPEED)}getTracking(){return this.get(Property.TRACKING)}getTrackingOptions(){return this.get(Property.TRACKING_OPTIONS)}setProjection(t){this.set(Property.PROJECTION,getProjection(t))}setTracking(t){this.set(Property.TRACKING,t)}setTrackingOptions(t){this.set(Property.TRACKING_OPTIONS,t)}}export default Geolocation;
//# sourceMappingURL=/sm/3c5f4a227565eba620966f3233d13c29bd6709cdc8e18870e4c0b0b239f45d23.map