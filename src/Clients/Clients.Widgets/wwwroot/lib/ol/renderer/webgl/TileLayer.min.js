/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/renderer/webgl/TileLayer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ReprojDataTile from"../../reproj/DataTile.js";import ReprojTile from"../../reproj/Tile.js";import TileState from"../../TileState.js";import TileTexture from"../../webgl/TileTexture.js";import WebGLArrayBuffer from"../../webgl/Buffer.js";import WebGLBaseTileLayerRenderer,{Uniforms as BaseUniforms,getCacheKey}from"./TileLayerBase.js";import{AttributeType}from"../../webgl/Helper.js";import{ELEMENT_ARRAY_BUFFER,STATIC_DRAW}from"../../webgl.js";import{apply as applyTransform}from"../../transform.js";import{boundingExtent,containsCoordinate,getIntersection}from"../../extent.js";import{fromUserExtent}from"../../proj.js";import{fromTransform as mat4FromTransform}from"../../vec/mat4.js";import{toSize}from"../../size.js";export const Uniforms={...BaseUniforms,TILE_TEXTURE_ARRAY:"u_tileTextures",TEXTURE_PIXEL_WIDTH:"u_texturePixelWidth",TEXTURE_PIXEL_HEIGHT:"u_texturePixelHeight",TEXTURE_RESOLUTION:"u_textureResolution",TEXTURE_ORIGIN_X:"u_textureOriginX",TEXTURE_ORIGIN_Y:"u_textureOriginY"};export const Attributes={TEXTURE_COORD:"a_textureCoord"};const attributeDescriptions=[{name:Attributes.TEXTURE_COORD,size:2,type:AttributeType.FLOAT}];class WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer{constructor(e,t){super(e,t),this.program_,this.vertexShader_=t.vertexShader,this.fragmentShader_=t.fragmentShader,this.indices_=new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER,STATIC_DRAW),this.indices_.fromArray([0,1,3,1,2,3]),this.paletteTextures_=t.paletteTextures||[]}reset(e){super.reset(e),this.vertexShader_=e.vertexShader,this.fragmentShader_=e.fragmentShader,this.helper&&(this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_))}afterHelperCreated(){this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_),this.helper.flushBufferData(this.indices_)}createTileRepresentation(e){return new TileTexture(e)}beforeTilesRender(e,t){super.beforeTilesRender(e,t),this.helper.useProgram(this.program_,e)}renderTile(e,t,r,i,s,o,n,a,l,h,T){const f=this.helper.getGL();this.helper.bindBuffer(e.coords),this.helper.bindBuffer(this.indices_),this.helper.enableAttributes(attributeDescriptions);let m=0;for(;m<e.textures.length;){const t=`${Uniforms.TILE_TEXTURE_ARRAY}[${m}]`;this.helper.bindTexture(e.textures[m],m,t),++m}for(let e=0;e<this.paletteTextures_.length;++e){const t=this.paletteTextures_[e],r=t.getTexture(f);this.helper.bindTexture(r,m,t.name),++m}const p=r.viewState,u=o[0]+2*h,_=o[1]+2*h,E=e.tile.tileCoord,d=E[1],g=E[2];this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM,mat4FromTransform(this.tempMat4,t)),this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA,T),this.helper.setUniformFloatValue(Uniforms.DEPTH,l);let R=i;h>0&&(R=a,getIntersection(R,i,R)),this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT,R),this.helper.setUniformFloatValue(Uniforms.RESOLUTION,p.resolution),this.helper.setUniformFloatValue(Uniforms.ZOOM,p.zoom),this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH,u),this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT,_),this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION,s),this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X,n[0]+d*o[0]*s-h*s),this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y,n[1]-g*o[1]*s+h*s),this.helper.drawElements(0,this.indices_.getSize())}getData(e){if(!this.helper.getGL())return null;const t=this.frameState;if(!t)return null;const r=this.getLayer(),i=applyTransform(t.pixelToCoordinateTransform,e.slice()),s=t.viewState,o=r.getExtent();if(o&&!containsCoordinate(fromUserExtent(o,s.projection),i))return null;const n=r.getSources(boundingExtent([i]),s.resolution);let a,l,h;for(a=n.length-1;a>=0;--a)if(l=n[a],"ready"===l.getState()){if(h=l.getTileGridForProjection(s.projection),l.getWrapX())break;const e=h.getExtent();if(!e||containsCoordinate(e,i))break}if(a<0)return null;const T=this.tileRepresentationCache;for(let e=h.getZForResolution(s.resolution);e>=h.getMinZoom();--e){const t=h.getTileCoordForCoordAndZ(i,e),r=getCacheKey(l,t);if(!T.containsKey(r))continue;const s=T.get(r),o=s.tile;if((o instanceof ReprojTile||o instanceof ReprojDataTile)&&o.getState()===TileState.EMPTY)return null;if(!s.loaded)continue;const n=h.getOrigin(e),a=toSize(h.getTileSize(e)),f=h.getResolution(e),m=(i[0]-n[0])/f-t[1]*a[0],p=(n[1]-i[1])/f-t[2]*a[1];return s.getPixelData(m,p)}return null}disposeInternal(){const e=this.helper;if(e){e.getGL().deleteProgram(this.program_),delete this.program_,e.deleteBuffer(this.indices_)}super.disposeInternal(),delete this.indices_}}export default WebGLTileLayerRenderer;
//# sourceMappingURL=/sm/cc9bcde2f46d24134939b56e6a1be33ad68fc3c662915f8c10f6a582f1af13c1.map