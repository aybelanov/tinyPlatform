/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/renderer/webgl/VectorTileLayer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import EventType from"../../events/EventType.js";import TileGeometry from"../../webgl/TileGeometry.js";import VectorStyleRenderer from"../../render/webgl/VectorStyleRenderer.js";import WebGLBaseTileLayerRenderer,{Uniforms}from"./TileLayerBase.js";import{create as createMat4,fromTransform as mat4FromTransform}from"../../vec/mat4.js";import{create as createTransform,makeInverse as makeInverseTransform,multiply as multiplyTransform,setFromArray as setFromTransform}from"../../transform.js";import{getIntersection}from"../../extent.js";class WebGLVectorTileLayerRenderer extends WebGLBaseTileLayerRenderer{constructor(e,r){super(e,r),this.styles_=[],this.styleRenderers_=[],this.currentFrameStateTransform_=createTransform(),this.tmpTransform_=createTransform(),this.tmpMat4_=createMat4(),this.applyOptions_(r)}reset(e){super.reset(e),this.applyOptions_(e),this.helper&&this.createRenderers_()}applyOptions_(e){this.styles_=Array.isArray(e.style)?e.style:[e.style]}createRenderers_(){this.styleRenderers_=this.styles_.map((e=>new VectorStyleRenderer(e,this.helper)))}afterHelperCreated(){this.createRenderers_()}createTileRepresentation(e){const r=new TileGeometry(e,this.styleRenderers_),t=()=>{r.ready&&(this.getLayer().changed(),r.removeEventListener(EventType.CHANGE,t))};return r.addEventListener(EventType.CHANGE,t),r}beforeTilesRender(e,r){super.beforeTilesRender(e,!0),this.helper.makeProjectionTransform(e,this.currentFrameStateTransform_)}applyUniforms_(e,r,t){setFromTransform(this.tmpTransform_,this.currentFrameStateTransform_),multiplyTransform(this.tmpTransform_,t),this.helper.setUniformMatrixValue(Uniforms.PROJECTION_MATRIX,mat4FromTransform(this.tmpMat4_,this.tmpTransform_)),makeInverseTransform(this.tmpTransform_,this.currentFrameStateTransform_),this.helper.setUniformMatrixValue(Uniforms.SCREEN_TO_WORLD_MATRIX,mat4FromTransform(this.tmpMat4_,this.tmpTransform_)),this.helper.setUniformFloatValue(Uniforms.GLOBAL_ALPHA,e),this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT,r)}renderTile(e,r,t,s,n,a,o,m,i,l,p){const f=getIntersection(m,s,m);for(let r=0,s=this.styleRenderers_.length;r<s;r++){const s=this.styleRenderers_[r],n=e.buffers[r];n&&s.render(n,t,(()=>{this.applyUniforms_(p,f,n.invertVerticesTransform)}))}}renderDeclutter(e){}disposeInternal(){super.disposeInternal()}}export default WebGLVectorTileLayerRenderer;
//# sourceMappingURL=/sm/e4917d0e6dd771335eaa685931f47fcd68f01ab93cc7c1961654797024aa0158.map