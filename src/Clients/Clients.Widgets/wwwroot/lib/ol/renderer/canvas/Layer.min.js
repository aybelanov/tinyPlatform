/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/renderer/canvas/Layer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import LayerRenderer from"../Layer.js";import RenderEvent from"../../render/Event.js";import RenderEventType from"../../render/EventType.js";import{apply as applyTransform,compose as composeTransform,create as createTransform}from"../../transform.js";import{asArray}from"../../color.js";import{createCanvasContext2D}from"../../dom.js";import{equals}from"../../array.js";import{getBottomLeft,getBottomRight,getTopLeft,getTopRight}from"../../extent.js";export const canvasPool=[];let pixelContext=null;function createPixelContext(){pixelContext=createCanvasContext2D(1,1,void 0,{willReadFrequently:!0})}class CanvasLayerRenderer extends LayerRenderer{constructor(e){super(e),this.container=null,this.renderedResolution,this.tempTransform=createTransform(),this.pixelTransform=createTransform(),this.inversePixelTransform=createTransform(),this.context=null,this.containerReused=!1,this.pixelContext_=null,this.frameState=null}getImageData(e,t,r){let n;pixelContext||createPixelContext(),pixelContext.clearRect(0,0,1,1);try{pixelContext.drawImage(e,t,r,1,1,0,0,1,1),n=pixelContext.getImageData(0,0,1,1).data}catch(e){return pixelContext=null,null}return n}getBackground(e){let t=this.getLayer().getBackground();return"function"==typeof t&&(t=t(e.viewState.resolution)),t||void 0}useContainer(e,t,r){const n=this.getLayer().getClassName();let o,a;if(e&&e.className===n&&(!r||e&&e.style.backgroundColor&&equals(asArray(e.style.backgroundColor),asArray(r)))){const t=e.firstElementChild;t instanceof HTMLCanvasElement&&(a=t.getContext("2d"))}if(a&&a.canvas.style.transform===t?(this.container=e,this.context=a,this.containerReused=!0):this.containerReused?(this.container=null,this.context=null,this.containerReused=!1):this.container&&(this.container.style.backgroundColor=null),!this.container){o=document.createElement("div"),o.className=n;let e=o.style;e.position="absolute",e.width="100%",e.height="100%",a=createCanvasContext2D();const t=a.canvas;o.appendChild(t),e=t.style,e.position="absolute",e.left="0",e.transformOrigin="top left",this.container=o,this.context=a}this.containerReused||!r||this.container.style.backgroundColor||(this.container.style.backgroundColor=r)}clipUnrotated(e,t,r){const n=getTopLeft(r),o=getTopRight(r),a=getBottomRight(r),s=getBottomLeft(r);applyTransform(t.coordinateToPixelTransform,n),applyTransform(t.coordinateToPixelTransform,o),applyTransform(t.coordinateToPixelTransform,a),applyTransform(t.coordinateToPixelTransform,s);const i=this.inversePixelTransform;applyTransform(i,n),applyTransform(i,o),applyTransform(i,a),applyTransform(i,s),e.save(),e.beginPath(),e.moveTo(Math.round(n[0]),Math.round(n[1])),e.lineTo(Math.round(o[0]),Math.round(o[1])),e.lineTo(Math.round(a[0]),Math.round(a[1])),e.lineTo(Math.round(s[0]),Math.round(s[1])),e.clip()}dispatchRenderEvent_(e,t,r){const n=this.getLayer();if(n.hasListener(e)){const o=new RenderEvent(e,this.inversePixelTransform,r,t);n.dispatchEvent(o)}}preRender(e,t){this.frameState=t,this.dispatchRenderEvent_(RenderEventType.PRERENDER,e,t)}postRender(e,t){this.dispatchRenderEvent_(RenderEventType.POSTRENDER,e,t)}getRenderTransform(e,t,r,n,o,a,s){const i=o/2,l=a/2,c=n/t,p=-c,m=-e[0]+s,d=-e[1];return composeTransform(this.tempTransform,i,l,c,p,-r,m,d)}disposeInternal(){delete this.frameState,super.disposeInternal()}}export default CanvasLayerRenderer;
//# sourceMappingURL=/sm/8021487d5490ce3dde7694f38f348f3a78c4954a7434f3fb02b872fe8998155b.map