/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/format/IGC.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import LineString from"../geom/LineString.js";import TextFeature from"./TextFeature.js";import{get as getProjection}from"../proj.js";import{transformGeometryWithOptions}from"./Feature.js";const B_RECORD_RE=/^B(\d{2})(\d{2})(\d{2})(\d{2})(\d{5})([NS])(\d{3})(\d{5})([EW])([AV])(\d{5})(\d{5})/,H_RECORD_RE=/^H.([A-Z]{3}).*?:(.*)/,HFDTE_RECORD_RE=/^HFDTE(\d{2})(\d{2})(\d{2})/,NEWLINE_RE=/\r\n|\r|\n/;class IGC extends TextFeature{constructor(e){super(),e=e||{},this.dataProjection=getProjection("EPSG:4326"),this.altitudeMode_=e.altitudeMode?e.altitudeMode:"none"}readFeatureFromText(e,t){const r=this.altitudeMode_,n=e.split(NEWLINE_RE),o={},s=[];let a,i,p=2e3,d=0,u=1,E=-1;for(a=0,i=n.length;a<i;++a){const e=n[a];let t;if("B"==e.charAt(0)){if(t=B_RECORD_RE.exec(e),t){const e=parseInt(t[1],10),n=parseInt(t[2],10),o=parseInt(t[3],10);let a=parseInt(t[4],10)+parseInt(t[5],10)/6e4;"S"==t[6]&&(a=-a);let i=parseInt(t[7],10)+parseInt(t[8],10)/6e4;if("W"==t[9]&&(i=-i),s.push(i,a),"none"!=r){let e;e="gps"==r?parseInt(t[11],10):"barometric"==r?parseInt(t[12],10):0,s.push(e)}let m=Date.UTC(p,d,u,e,n,o);m<E&&(m=Date.UTC(p,d,u+1,e,n,o)),s.push(m/1e3),E=m}}else"H"==e.charAt(0)&&(t=HFDTE_RECORD_RE.exec(e),t?(u=parseInt(t[1],10),d=parseInt(t[2],10)-1,p=2e3+parseInt(t[3],10)):(t=H_RECORD_RE.exec(e),t&&(o[t[1]]=t[2].trim())))}if(0===s.length)return null;const m=new LineString(s,"none"==r?"XYM":"XYZM"),R=new Feature(transformGeometryWithOptions(m,!1,t));return R.setProperties(o,!0),R}readFeaturesFromText(e,t){const r=this.readFeatureFromText(e,t);return r?[r]:[]}}export default IGC;
//# sourceMappingURL=/sm/777c9bac593f00023eca9fabe8f37e23e3eb4a999cd525cef3ebf31bf09cd7c9.map