/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/format/xsd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getAllTextContent,getDocument}from"../xml.js";import{padNumber}from"../string.js";export function readBoolean(e){return readBooleanString(getAllTextContent(e,!1))}export function readBooleanString(e){const t=/^\s*(true|1)|(false|0)\s*$/.exec(e);if(t)return void 0!==t[1]||!1}export function readDateTime(e){const t=getAllTextContent(e,!1),n=Date.parse(t);return isNaN(n)?void 0:n/1e3}export function readDecimal(e){return readDecimalString(getAllTextContent(e,!1))}export function readDecimalString(e){const t=/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)\s*$/i.exec(e);if(t)return parseFloat(t[1])}export function readPositiveInteger(e){return readNonNegativeIntegerString(getAllTextContent(e,!1))}export function readNonNegativeIntegerString(e){const t=/^\s*(\d+)\s*$/.exec(e);if(t)return parseInt(t[1],10)}export function readString(e){return getAllTextContent(e,!1).trim()}export function writeBooleanTextNode(e,t){writeStringTextNode(e,t?"1":"0")}export function writeCDATASection(e,t){e.appendChild(getDocument().createCDATASection(t))}export function writeDateTimeTextNode(e,t){const n=new Date(1e3*t),r=n.getUTCFullYear()+"-"+padNumber(n.getUTCMonth()+1,2)+"-"+padNumber(n.getUTCDate(),2)+"T"+padNumber(n.getUTCHours(),2)+":"+padNumber(n.getUTCMinutes(),2)+":"+padNumber(n.getUTCSeconds(),2)+"Z";e.appendChild(getDocument().createTextNode(r))}export function writeDecimalTextNode(e,t){const n=t.toPrecision();e.appendChild(getDocument().createTextNode(n))}export function writeNonNegativeIntegerTextNode(e,t){const n=t.toString();e.appendChild(getDocument().createTextNode(n))}export function writeStringTextNode(e,t){e.appendChild(getDocument().createTextNode(t))}
//# sourceMappingURL=/sm/8a1887964bda478053b03da1158e74f8aead30e16dc291b113d9e67695e647a4.map