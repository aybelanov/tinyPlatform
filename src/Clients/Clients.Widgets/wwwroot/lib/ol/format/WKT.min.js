/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/format/WKT.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import GeometryCollection from"../geom/GeometryCollection.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import TextFeature from"./TextFeature.js";import{transformGeometryWithOptions}from"./Feature.js";const GeometryConstructor={POINT:Point,LINESTRING:LineString,POLYGON:Polygon,MULTIPOINT:MultiPoint,MULTILINESTRING:MultiLineString,MULTIPOLYGON:MultiPolygon},EMPTY="EMPTY",Z="Z",M="M",ZM="ZM",TokenType={START:0,TEXT:1,LEFT_PAREN:2,RIGHT_PAREN:3,NUMBER:4,COMMA:5,EOF:6},wktTypeLookup={Point:"POINT",LineString:"LINESTRING",Polygon:"POLYGON",MultiPoint:"MULTIPOINT",MultiLineString:"MULTILINESTRING",MultiPolygon:"MULTIPOLYGON",GeometryCollection:"GEOMETRYCOLLECTION",Circle:"CIRCLE"};class Lexer{constructor(e){this.wkt=e,this.index_=-1}isAlpha_(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"}isNumeric_(e,t){return t=void 0!==t&&t,e>="0"&&e<="9"||"."==e&&!t}isWhiteSpace_(e){return" "==e||"\t"==e||"\r"==e||"\n"==e}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const e=this.nextChar_(),t=this.index_;let o,r=e;if("("==e)o=TokenType.LEFT_PAREN;else if(","==e)o=TokenType.COMMA;else if(")"==e)o=TokenType.RIGHT_PAREN;else if(this.isNumeric_(e)||"-"==e)o=TokenType.NUMBER,r=this.readNumber_();else if(this.isAlpha_(e))o=TokenType.TEXT,r=this.readText_();else{if(this.isWhiteSpace_(e))return this.nextToken();if(""!==e)throw new Error("Unexpected character: "+e);o=TokenType.EOF}return{position:t,value:r,type:o}}readNumber_(){let e;const t=this.index_;let o=!1,r=!1;do{"."==e?o=!0:"e"!=e&&"E"!=e||(r=!0),e=this.nextChar_()}while(this.isNumeric_(e,o)||!r&&("e"==e||"E"==e)||r&&("-"==e||"+"==e));return parseFloat(this.wkt.substring(t,this.index_--))}readText_(){let e;const t=this.index_;do{e=this.nextChar_()}while(this.isAlpha_(e));return this.wkt.substring(t,this.index_--).toUpperCase()}}class Parser{constructor(e){this.lexer_=e,this.token_={position:0,type:TokenType.START},this.layout_="XY"}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(e){return this.token_.type==e}match(e){const t=this.isTokenType(e);return t&&this.consume_(),t}parse(){return this.consume_(),this.parseGeometry_()}parseGeometryLayout_(){let e="XY";const t=this.token_;if(this.isTokenType(TokenType.TEXT)){const o=t.value;o===Z?e="XYZ":o===M?e="XYM":o===ZM&&(e="XYZM"),"XY"!==e&&this.consume_()}return e}parseGeometryCollectionText_(){if(this.match(TokenType.LEFT_PAREN)){const e=[];do{e.push(this.parseGeometry_())}while(this.match(TokenType.COMMA));if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(TokenType.LEFT_PAREN)){const e=this.parsePoint_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(TokenType.LEFT_PAREN)){const e=this.parsePointList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(TokenType.LEFT_PAREN)){const e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(TokenType.LEFT_PAREN)){let e;if(e=this.token_.type==TokenType.LEFT_PAREN?this.parsePointTextList_():this.parsePointList_(),this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(TokenType.LEFT_PAREN)){const e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(TokenType.LEFT_PAREN)){const e=this.parsePolygonTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())}parsePoint_(){const e=[],t=this.layout_.length;for(let o=0;o<t;++o){const t=this.token_;if(!this.match(TokenType.NUMBER))break;e.push(t.value)}if(e.length==t)return e;throw new Error(this.formatErrorMessage_())}parsePointList_(){const e=[this.parsePoint_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePoint_());return e}parsePointTextList_(){const e=[this.parsePointText_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePointText_());return e}parseLineStringTextList_(){const e=[this.parseLineStringText_()];for(;this.match(TokenType.COMMA);)e.push(this.parseLineStringText_());return e}parsePolygonTextList_(){const e=[this.parsePolygonText_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePolygonText_());return e}isEmptyGeometry_(){const e=this.isTokenType(TokenType.TEXT)&&this.token_.value==EMPTY;return e&&this.consume_(),e}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const e=this.token_;if(this.match(TokenType.TEXT)){const t=e.value;this.layout_=this.parseGeometryLayout_();const o=this.isEmptyGeometry_();if("GEOMETRYCOLLECTION"==t){if(o)return new GeometryCollection([]);const e=this.parseGeometryCollectionText_();return new GeometryCollection(e)}const r=GeometryConstructor[t];if(!r)throw new Error("Invalid geometry type: "+t);let n;if(o)n="POINT"==t?[NaN,NaN]:[];else switch(t){case"POINT":n=this.parsePointText_();break;case"LINESTRING":n=this.parseLineStringText_();break;case"POLYGON":n=this.parsePolygonText_();break;case"MULTIPOINT":n=this.parseMultiPointText_();break;case"MULTILINESTRING":n=this.parseMultiLineStringText_();break;case"MULTIPOLYGON":n=this.parseMultiPolygonText_()}return new r(n,this.layout_)}throw new Error(this.formatErrorMessage_())}}class WKT extends TextFeature{constructor(e){super(),e=e||{},this.splitCollection_=void 0!==e.splitCollection&&e.splitCollection}parse_(e){const t=new Lexer(e);return new Parser(t).parse()}readFeatureFromText(e,t){const o=this.readGeometryFromText(e,t),r=new Feature;return r.setGeometry(o),r}readFeaturesFromText(e,t){let o=[];const r=this.readGeometryFromText(e,t);o=this.splitCollection_&&"GeometryCollection"==r.getType()?r.getGeometriesArray():[r];const n=[];for(let e=0,t=o.length;e<t;++e){const t=new Feature;t.setGeometry(o[e]),n.push(t)}return n}readGeometryFromText(e,t){const o=this.parse_(e);return transformGeometryWithOptions(o,!1,t)}writeFeatureText(e,t){const o=e.getGeometry();return o?this.writeGeometryText(o,t):""}writeFeaturesText(e,t){if(1==e.length)return this.writeFeatureText(e[0],t);const o=[];for(let t=0,r=e.length;t<r;++t)o.push(e[t].getGeometry());const r=new GeometryCollection(o);return this.writeGeometryText(r,t)}writeGeometryText(e,t){return encode(transformGeometryWithOptions(e,!0,t))}}function encodePointGeometry(e){const t=e.getCoordinates();return 0===t.length?"":t.join(" ")}function encodeMultiPointGeometry(e){const t=[],o=e.getPoints();for(let e=0,r=o.length;e<r;++e)t.push("("+encodePointGeometry(o[e])+")");return t.join(",")}function encodeGeometryCollectionGeometry(e){const t=[],o=e.getGeometries();for(let e=0,r=o.length;e<r;++e)t.push(encode(o[e]));return t.join(",")}function encodeLineStringGeometry(e){const t=e.getCoordinates(),o=[];for(let e=0,r=t.length;e<r;++e)o.push(t[e].join(" "));return o.join(",")}function encodeMultiLineStringGeometry(e){const t=[],o=e.getLineStrings();for(let e=0,r=o.length;e<r;++e)t.push("("+encodeLineStringGeometry(o[e])+")");return t.join(",")}function encodePolygonGeometry(e){const t=[],o=e.getLinearRings();for(let e=0,r=o.length;e<r;++e)t.push("("+encodeLineStringGeometry(o[e])+")");return t.join(",")}function encodeMultiPolygonGeometry(e){const t=[],o=e.getPolygons();for(let e=0,r=o.length;e<r;++e)t.push("("+encodePolygonGeometry(o[e])+")");return t.join(",")}function encodeGeometryLayout(e){const t=e.getLayout();let o="";return"XYZ"!==t&&"XYZM"!==t||(o+=Z),"XYM"!==t&&"XYZM"!==t||(o+=M),o}const GeometryEncoder={Point:encodePointGeometry,LineString:encodeLineStringGeometry,Polygon:encodePolygonGeometry,MultiPoint:encodeMultiPointGeometry,MultiLineString:encodeMultiLineStringGeometry,MultiPolygon:encodeMultiPolygonGeometry,GeometryCollection:encodeGeometryCollectionGeometry};function encode(e){const t=e.getType(),o=(0,GeometryEncoder[t])(e);let r=wktTypeLookup[t];if("function"==typeof e.getFlatCoordinates){const t=encodeGeometryLayout(e);t.length>0&&(r+=" "+t)}return 0===o.length?r+" "+EMPTY:r+"("+o+")"}export default WKT;
//# sourceMappingURL=/sm/140b82ecfa56d6ff427e806366b9a7c8488b06beeb735e767c11ecce79a9b395.map