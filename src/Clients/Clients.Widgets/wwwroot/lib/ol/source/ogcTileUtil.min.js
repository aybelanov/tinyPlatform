/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/source/ogcTileUtil.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TileGrid from"../tilegrid/TileGrid.js";import{getJSON,resolveUrl}from"../net.js";import{get as getProjection}from"../proj.js";import{getIntersection as intersectExtents}from"../extent.js";const knownMapMediaTypes={"image/png":!0,"image/jpeg":!0,"image/gif":!0,"image/webp":!0},knownVectorMediaTypes={"application/vnd.mapbox-vector-tile":!0,"application/geo+json":!0};export function getMapTileUrlTemplate(e,t){let i,r;for(let n=0;n<e.length;++n){const o=e[n];if("item"===o.rel){if(o.type===t){i=o.href;break}(knownMapMediaTypes[o.type]||!r&&o.type.startsWith("image/"))&&(r=o.href)}}if(!i){if(!r)throw new Error('Could not find "item" link');i=r}return i}export function getVectorTileUrlTemplate(e,t,i){let r,n;const o={};for(let i=0;i<e.length;++i){const l=e[i];if(o[l.type]=l.href,"item"===l.rel){if(l.type===t){r=l.href;break}knownVectorMediaTypes[l.type]&&(n=l.href)}}if(!r&&i)for(let e=0;e<i.length;++e){const t=i[e];if(o[t]){r=o[t];break}}if(!r){if(!n)throw new Error('Could not find "item" link');r=n}return r}function parseTileMatrixSet(e,t,i,r){let n=e.projection;if(!n&&(n=getProjection(t.crs),!n))throw new Error(`Unsupported CRS: ${t.crs}`);const o="en"!==n.getAxisOrientation().substr(0,2),l=t.tileMatrices,s={};for(let e=0;e<l.length;++e){const t=l[e];s[t.id]=t}const a={},c=[];if(r)for(let e=0;e<r.length;++e){const t=r[e],i=t.tileMatrix;c.push(i),a[i]=t}else for(let e=0;e<l.length;++e){const t=l[e].id;c.push(t)}const p=c.length,f=new Array(p),g=new Array(p),m=new Array(p),T=new Array(p),d=[-1/0,-1/0,1/0,1/0];for(let e=0;e<p;++e){const t=c[e],i=s[t],r=i.pointOfOrigin;f[e]=o?[r[1],r[0]]:r,g[e]=i.cellSize,m[e]=[i.matrixWidth,i.matrixHeight],T[e]=[i.tileWidth,i.tileHeight];const n=a[t];if(n){const t=i.cellSize*i.tileWidth,r=f[e][0]+n.minTileCol*t,o=f[e][0]+(n.maxTileCol+1)*t,l=i.cellSize*i.tileHeight;let s,a;"bottomLeft"===i.cornerOfOrigin?(s=f[e][1]+n.minTileRow*l,a=f[e][1]+(n.maxTileRow+1)*l):(s=f[e][1]-(n.maxTileRow+1)*l,a=f[e][1]-n.minTileRow*l),intersectExtents(d,[r,s,o,a],d)}}const w=new TileGrid({origins:f,resolutions:g,sizes:m,tileSizes:T,extent:r?d:void 0}),u=e.context,h=e.url;return{grid:w,urlTemplate:i,urlFunction:function(e,t,n){if(!e)return;const o=c[e[0]],l=s[o],p="bottomLeft"===l.cornerOfOrigin,f={tileMatrix:o,tileCol:e[1],tileRow:p?-e[2]-1:e[2]};if(r){const e=a[l.id];if(f.tileCol<e.minTileCol||f.tileCol>e.maxTileCol||f.tileRow<e.minTileRow||f.tileRow>e.maxTileRow)return}Object.assign(f,u);const g=i.replace(/\{(\w+?)\}/g,(function(e,t){return f[t]}));return resolveUrl(h,g)}}}function parseTileSetMetadata(e,t){const i=t.tileMatrixSetLimits;let r;if("map"===t.dataType)r=getMapTileUrlTemplate(t.links,e.mediaType);else{if("vector"!==t.dataType)throw new Error('Expected tileset data type to be "map" or "vector"');r=getVectorTileUrlTemplate(t.links,e.mediaType,e.supportedMediaTypes)}if(t.tileMatrixSet)return parseTileMatrixSet(e,t.tileMatrixSet,r,i);const n=t.links.find((e=>"http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme"===e.rel));if(!n)throw new Error("Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet");const o=n.href,l=resolveUrl(e.url,o);return getJSON(l).then((function(t){return parseTileMatrixSet(e,t,r,i)}))}export function getTileSetInfo(e){return getJSON(e.url).then((function(t){return parseTileSetMetadata(e,t)}))}
//# sourceMappingURL=/sm/11301e990f514f7070be5f705f711d1687dc90b1477a5b55728f853473d0514b.map