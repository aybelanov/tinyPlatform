/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/source/DataTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DataTile from"../DataTile.js";import EventType from"../events/EventType.js";import ReprojDataTile from"../reproj/DataTile.js";import TileCache from"../TileCache.js";import TileEventType from"./TileEventType.js";import TileSource,{TileSourceEvent}from"./Tile.js";import TileState from"../TileState.js";import{createXYZ,extentFromProjection,getForProjection as getTileGridForProjection}from"../tilegrid.js";import{equivalent,get as getProjection}from"../proj.js";import{getKeyZXY}from"../tilecoord.js";import{getUid}from"../util.js";import{toPromise}from"../functions.js";import{toSize}from"../size.js";class DataTileSource extends TileSource{constructor(e){const t=void 0===e.projection?"EPSG:3857":e.projection;let i=e.tileGrid;void 0===i&&t&&(i=createXYZ({extent:extentFromProjection(t),maxResolution:e.maxResolution,maxZoom:e.maxZoom,minZoom:e.minZoom,tileSize:e.tileSize})),super({cacheSize:.1,attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:t,tileGrid:i,opaque:e.opaque,state:e.state,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate}),this.gutter_=void 0!==e.gutter?e.gutter:0,this.tileSize_=e.tileSize?toSize(e.tileSize):null,this.tileSizes_=null,this.tileLoadingKeys_={},this.loader_=e.loader,this.handleTileChange_=this.handleTileChange_.bind(this),this.bandCount=void 0===e.bandCount?4:e.bandCount,this.tileGridForProjection_={},this.tileCacheForProjection_={}}setTileSizes(e){this.tileSizes_=e}getTileSize(e){if(this.tileSizes_)return this.tileSizes_[e];if(this.tileSize_)return this.tileSize_;const t=this.getTileGrid();return t?toSize(t.getTileSize(e)):[256,256]}getGutterForProjection(e){const t=this.getProjection();return!t||equivalent(t,e)?this.gutter_:0}setLoader(e){this.loader_=e}getReprojTile_(e,t,i,o,r){const n=this.getTileCacheForProjection(o),s=getKeyZXY(e,t,i);if(n.containsKey(s)){const e=n.get(s);if(e&&e.key==this.getKey())return e}const l=this.getTileGrid(),a=Math.max.apply(null,l.getResolutions().map(((e,t)=>{const i=toSize(l.getTileSize(t)),o=this.getTileSize(t);return Math.max(o[0]/i[0],o[1]/i[1])}))),c=this.getTileGridForProjection(r),h=this.getTileGridForProjection(o),T=[e,t,i],g=this.getTileCoordForTileUrlFunction(T,o),d=Object.assign({sourceProj:r,sourceTileGrid:c,targetProj:o,targetTileGrid:h,tileCoord:T,wrappedTileCoord:g,pixelRatio:a,gutter:this.getGutterForProjection(r),getTileFunction:(e,t,i,o)=>this.getTile(e,t,i,o,r)},this.tileOptions),u=new ReprojDataTile(d);return u.key=this.getKey(),u}getTile(e,t,i,o,r){const n=this.getProjection();if(n&&r&&!equivalent(n,r))return this.getReprojTile_(e,t,i,r,n);const s=this.getTileSize(e),l=getKeyZXY(e,t,i);if(this.tileCache.containsKey(l))return this.tileCache.get(l);const a=this.loader_;const c=Object.assign({tileCoord:[e,t,i],loader:function(){return toPromise((function(){return a(e,t,i)}))},size:s},this.tileOptions),h=new DataTile(c);return h.key=this.getKey(),h.addEventListener(EventType.CHANGE,this.handleTileChange_),this.tileCache.set(l,h),h}handleTileChange_(e){const t=e.target,i=getUid(t),o=t.getState();let r;o==TileState.LOADING?(this.tileLoadingKeys_[i]=!0,r=TileEventType.TILELOADSTART):i in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[i],r=o==TileState.ERROR?TileEventType.TILELOADERROR:o==TileState.LOADED?TileEventType.TILELOADEND:void 0),r&&this.dispatchEvent(new TileSourceEvent(r,t))}getTileGridForProjection(e){const t=this.getProjection();if(this.tileGrid&&(!t||equivalent(t,e)))return this.tileGrid;const i=getUid(e);return i in this.tileGridForProjection_||(this.tileGridForProjection_[i]=getTileGridForProjection(e)),this.tileGridForProjection_[i]}setTileGridForProjection(e,t){const i=getProjection(e);if(i){const e=getUid(i);e in this.tileGridForProjection_||(this.tileGridForProjection_[e]=t)}}getTileCacheForProjection(e){const t=this.getProjection();if(!t||equivalent(t,e))return this.tileCache;const i=getUid(e);return i in this.tileCacheForProjection_||(this.tileCacheForProjection_[i]=new TileCache(.1)),this.tileCacheForProjection_[i]}expireCache(e,t){const i=this.getTileCacheForProjection(e);this.tileCache.expireCache(this.tileCache==i?t:{});for(const e in this.tileCacheForProjection_){const o=this.tileCacheForProjection_[e];o.expireCache(o==i?t:{})}}clear(){super.clear();for(const e in this.tileCacheForProjection_)this.tileCacheForProjection_[e].clear()}}export default DataTileSource;
//# sourceMappingURL=/sm/ae2281c0bf42f1ee31f369df0e5b40753f4ed05b98a05dbc28c8fcf18d21ea7e.map