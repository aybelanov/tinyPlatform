/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/source/TileWMS.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TileImage from"./TileImage.js";import{DEFAULT_VERSION,getImageSrc,getRequestParams}from"./wms.js";import{appendParams}from"../uri.js";import{buffer,createEmpty}from"../extent.js";import{calculateSourceResolution}from"../reproj.js";import{compareVersions}from"../string.js";import{get as getProjection,transform}from"../proj.js";import{modulo}from"../math.js";import{hash as tileCoordHash}from"../tilecoord.js";class TileWMS extends TileImage{constructor(t){t=t||{};const e=Object.assign({},t.params),r=!("TRANSPARENT"in e)||e.TRANSPARENT;super({attributions:t.attributions,attributionsCollapsible:t.attributionsCollapsible,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,interpolate:t.interpolate,opaque:!r,projection:t.projection,reprojectionErrorThreshold:t.reprojectionErrorThreshold,tileClass:t.tileClass,tileGrid:t.tileGrid,tileLoadFunction:t.tileLoadFunction,url:t.url,urls:t.urls,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition,zDirection:t.zDirection}),this.gutter_=void 0!==t.gutter?t.gutter:0,this.params_=e,this.v13_=!0,this.serverType_=t.serverType,this.hidpi_=void 0===t.hidpi||t.hidpi,this.tmpExtent_=createEmpty(),this.updateV13_(),this.setKey(this.getKeyForParams_())}getFeatureInfoUrl(t,e,r,i){const s=getProjection(r),o=this.getProjection()||s;let a=this.getTileGrid();a||(a=this.getTileGridForProjection(o));const n=transform(t,s,o),l=calculateSourceResolution(o,s,t,e),h=a.getZForResolution(l,this.zDirection),u=a.getResolution(h),g=a.getTileCoordForCoordAndZ(n,h);if(a.getResolutions().length<=g[0])return;let p=a.getTileCoordExtent(g,this.tmpExtent_);const c=this.gutter_;0!==c&&(p=buffer(p,u*c,p));const m={QUERY_LAYERS:this.params_.LAYERS};Object.assign(m,getRequestParams(this.params_,"GetFeatureInfo"),i);const d=Math.floor((n[0]-p[0])/u),_=Math.floor((p[3]-n[1])/u);return m[this.v13_?"I":"X"]=d,m[this.v13_?"J":"Y"]=_,this.getRequestUrl_(g,p,1,o||s,m)}getLegendUrl(t,e){if(void 0===this.urls[0])return;const r={SERVICE:"WMS",VERSION:DEFAULT_VERSION,REQUEST:"GetLegendGraphic",FORMAT:"image/png"};if(void 0===e||void 0===e.LAYER){const t=this.params_.LAYERS;if(!(!Array.isArray(t)||1===t.length))return;r.LAYER=t}if(void 0!==t){const e=this.getProjection()?this.getProjection().getMetersPerUnit():1,i=28e-5;r.SCALE=t*e/i}return Object.assign(r,e),appendParams(this.urls[0],r)}getGutter(){return this.gutter_}getParams(){return this.params_}getRequestUrl_(t,e,r,i,s){const o=this.urls;if(!o)return;let a;if(1==o.length)a=o[0];else{a=o[modulo(tileCoordHash(t),o.length)]}return getImageSrc(e,(this.tileGrid||this.getTileGridForProjection(i)).getResolution(t[0]),r,i,a,s,this.serverType_)}getTilePixelRatio(t){return this.hidpi_&&void 0!==this.serverType_?t:1}getKeyForParams_(){let t=0;const e=[];for(const r in this.params_)e[t++]=r+"-"+this.params_[r];return e.join("/")}updateParams(t){Object.assign(this.params_,t),this.updateV13_(),this.setKey(this.getKeyForParams_())}updateV13_(){const t=this.params_.VERSION||DEFAULT_VERSION;this.v13_=compareVersions(t,"1.3")>=0}tileUrlFunction(t,e,r){let i=this.getTileGrid();if(i||(i=this.getTileGridForProjection(r)),i.getResolutions().length<=t[0])return;1==e||this.hidpi_&&void 0!==this.serverType_||(e=1);const s=i.getResolution(t[0]);let o=i.getTileCoordExtent(t,this.tmpExtent_);const a=this.gutter_;0!==a&&(o=buffer(o,s*a,o));const n=Object.assign({},getRequestParams(this.params_,"GetMap"));return this.getRequestUrl_(t,o,e,r,n)}}export default TileWMS;
//# sourceMappingURL=/sm/27b98d5fd9d43fcd45d00557494e02044c9662341d719d04b29eedc3cd5d0069.map