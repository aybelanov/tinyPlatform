/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/source/Tile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Event from"../events/Event.js";import Source from"./Source.js";import TileCache from"../TileCache.js";import TileState from"../TileState.js";import{abstract}from"../util.js";import{assert}from"../asserts.js";import{equivalent}from"../proj.js";import{getKeyZXY,withinExtentAndZ}from"../tilecoord.js";import{getForProjection as getTileGridForProjection,wrapX}from"../tilegrid.js";import{scale as scaleSize,toSize}from"../size.js";class TileSource extends Source{constructor(e){super({attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX,interpolate:e.interpolate}),this.on,this.once,this.un,this.opaque_=void 0!==e.opaque&&e.opaque,this.tilePixelRatio_=void 0!==e.tilePixelRatio?e.tilePixelRatio:1,this.tileGrid=void 0!==e.tileGrid?e.tileGrid:null;const t=[256,256];this.tileGrid&&toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()),t),this.tileCache=new TileCache(e.cacheSize||0),this.tmpSize=[0,0],this.key_=e.key||"",this.tileOptions={transition:e.transition,interpolate:e.interpolate},this.zDirection=e.zDirection?e.zDirection:0}canExpireCache(){return this.tileCache.canExpireCache()}expireCache(e,t){const i=this.getTileCacheForProjection(e);i&&i.expireCache(t)}forEachLoadedTile(e,t,i,r){const o=this.getTileCacheForProjection(e);if(!o)return!1;let s,l,n,a=!0;for(let e=i.minX;e<=i.maxX;++e)for(let c=i.minY;c<=i.maxY;++c)l=getKeyZXY(t,e,c),n=!1,o.containsKey(l)&&(s=o.get(l),n=s.getState()===TileState.LOADED,n&&(n=!1!==r(s))),n||(a=!1);return a}getGutterForProjection(e){return 0}getKey(){return this.key_}setKey(e){this.key_!==e&&(this.key_=e,this.changed())}getOpaque(e){return this.opaque_}getResolutions(e){const t=e?this.getTileGridForProjection(e):this.tileGrid;return t?t.getResolutions():null}getTile(e,t,i,r,o){return abstract()}getTileGrid(){return this.tileGrid}getTileGridForProjection(e){return this.tileGrid?this.tileGrid:getTileGridForProjection(e)}getTileCacheForProjection(e){const t=this.getProjection();return assert(null===t||equivalent(t,e),"A VectorTile source can only be rendered if it has a projection compatible with the view projection."),this.tileCache}getTilePixelRatio(e){return this.tilePixelRatio_}getTilePixelSize(e,t,i){const r=this.getTileGridForProjection(i),o=this.getTilePixelRatio(t),s=toSize(r.getTileSize(e),this.tmpSize);return 1==o?s:scaleSize(s,o,this.tmpSize)}getTileCoordForTileUrlFunction(e,t){t=void 0!==t?t:this.getProjection();const i=this.getTileGridForProjection(t);return this.getWrapX()&&t.isGlobal()&&(e=wrapX(i,e,t)),withinExtentAndZ(e,i)?e:null}clear(){this.tileCache.clear()}refresh(){this.clear(),super.refresh()}updateCacheSize(e,t){const i=this.getTileCacheForProjection(t);e>i.highWaterMark&&(i.highWaterMark=e)}useTile(e,t,i,r){}}export class TileSourceEvent extends Event{constructor(e,t){super(e),this.tile=t}}export default TileSource;
//# sourceMappingURL=/sm/51150c97a50992605cc3fcddd724ca9091f9c8e0a6116fc2f57904319b3665cf.map