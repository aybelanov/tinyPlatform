/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/array.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
export function binarySearch(r,n,e){let t,o;e=e||ascending;let u=0,i=r.length,f=!1;for(;u<i;)t=u+(i-u>>1),o=+e(r[t],n),o<0?u=t+1:(i=t,f=!o);return f?u:~u}export function ascending(r,n){return r>n?1:r<n?-1:0}export function descending(r,n){return r<n?1:r>n?-1:0}export function linearFindNearest(r,n,e){if(r[0]<=n)return 0;const t=r.length;if(n<=r[t-1])return t-1;if("function"==typeof e){for(let o=1;o<t;++o){const t=r[o];if(t===n)return o;if(t<n)return e(n,r[o-1],t)>0?o-1:o}return t-1}if(e>0){for(let e=1;e<t;++e)if(r[e]<n)return e-1;return t-1}if(e<0){for(let e=1;e<t;++e)if(r[e]<=n)return e;return t-1}for(let e=1;e<t;++e){if(r[e]==n)return e;if(r[e]<n)return r[e-1]-n<n-r[e]?e-1:e}return t-1}export function reverseSubArray(r,n,e){for(;n<e;){const t=r[n];r[n]=r[e],r[e]=t,++n,--e}}export function extend(r,n){const e=Array.isArray(n)?n:[n],t=e.length;for(let n=0;n<t;n++)r[r.length]=e[n]}export function remove(r,n){const e=r.indexOf(n),t=e>-1;return t&&r.splice(e,1),t}export function equals(r,n){const e=r.length;if(e!==n.length)return!1;for(let t=0;t<e;t++)if(r[t]!==n[t])return!1;return!0}export function stableSort(r,n){const e=r.length,t=Array(r.length);let o;for(o=0;o<e;o++)t[o]={index:o,value:r[o]};for(t.sort((function(r,e){return n(r.value,e.value)||r.index-e.index})),o=0;o<r.length;o++)r[o]=t[o].value}export function isSorted(r,n,e){const t=n||ascending;return r.every((function(n,o){if(0===o)return!0;const u=t(r[o-1],n);return!(u>0||e&&0===u)}))}
//# sourceMappingURL=/sm/eb932e7d94c870c94a74b6e7a0c9103ab46d98d27d9e3062c57e87df8c3c1855.map