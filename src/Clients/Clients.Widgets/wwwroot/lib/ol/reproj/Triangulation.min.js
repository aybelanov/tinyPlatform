/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/reproj/Triangulation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{boundingExtent,createEmpty,extendCoordinate,getArea,getBottomLeft,getBottomRight,getTopLeft,getTopRight,getWidth,intersects}from"../extent.js";import{getTransform}from"../proj.js";import{modulo}from"../math.js";const MAX_SUBDIVISION=10,MAX_TRIANGLE_WIDTH=.25;class Triangulation{constructor(t,i,e,s,r,o){this.sourceProj_=t,this.targetProj_=i;let n={};const h=getTransform(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){const i=t[0]+"/"+t[1];return n[i]||(n[i]=h(t)),n[i]},this.maxSourceExtent_=s,this.errorThresholdSquared_=r*r,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!s&&!!this.sourceProj_.getExtent()&&getWidth(s)>=getWidth(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?getWidth(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?getWidth(this.targetProj_.getExtent()):null;const a=getTopLeft(e),d=getTopRight(e),c=getBottomRight(e),u=getBottomLeft(e),_=this.transformInv_(a),l=this.transformInv_(d),g=this.transformInv_(c),W=this.transformInv_(u),f=10+(o?Math.max(0,Math.ceil(Math.log2(getArea(e)/(o*o*256*256)))):0);if(this.addQuad_(a,d,c,u,_,l,g,W,f),this.wrapsXInSource_){let t=1/0;this.triangles_.forEach((function(i,e,s){t=Math.min(t,i.source[0][0],i.source[1][0],i.source[2][0])})),this.triangles_.forEach((i=>{if(Math.max(i.source[0][0],i.source[1][0],i.source[2][0])-t>this.sourceWorldWidth_/2){const e=[[i.source[0][0],i.source[0][1]],[i.source[1][0],i.source[1][1]],[i.source[2][0],i.source[2][1]]];e[0][0]-t>this.sourceWorldWidth_/2&&(e[0][0]-=this.sourceWorldWidth_),e[1][0]-t>this.sourceWorldWidth_/2&&(e[1][0]-=this.sourceWorldWidth_),e[2][0]-t>this.sourceWorldWidth_/2&&(e[2][0]-=this.sourceWorldWidth_);const s=Math.min(e[0][0],e[1][0],e[2][0]);Math.max(e[0][0],e[1][0],e[2][0])-s<this.sourceWorldWidth_/2&&(i.source=e)}}))}n={}}addTriangle_(t,i,e,s,r,o){this.triangles_.push({source:[s,r,o],target:[t,i,e]})}addQuad_(t,i,e,s,r,o,n,h,a){const d=boundingExtent([r,o,n,h]),c=this.sourceWorldWidth_?getWidth(d)/this.sourceWorldWidth_:null,u=this.sourceWorldWidth_,_=this.sourceProj_.canWrapX()&&c>.5&&c<1;let l=!1;if(a>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_){const r=boundingExtent([t,i,e,s]);l=getWidth(r)/this.targetWorldWidth_>.25||l}!_&&this.sourceProj_.isGlobal()&&c&&(l=c>.25||l)}if(!l&&this.maxSourceExtent_&&isFinite(d[0])&&isFinite(d[1])&&isFinite(d[2])&&isFinite(d[3])&&!intersects(d,this.maxSourceExtent_))return;let g=0;if(!(l||isFinite(r[0])&&isFinite(r[1])&&isFinite(o[0])&&isFinite(o[1])&&isFinite(n[0])&&isFinite(n[1])&&isFinite(h[0])&&isFinite(h[1])))if(a>0)l=!0;else if(g=(isFinite(r[0])&&isFinite(r[1])?0:8)+(isFinite(o[0])&&isFinite(o[1])?0:4)+(isFinite(n[0])&&isFinite(n[1])?0:2)+(isFinite(h[0])&&isFinite(h[1])?0:1),1!=g&&2!=g&&4!=g&&8!=g)return;if(a>0){if(!l){const i=[(t[0]+e[0])/2,(t[1]+e[1])/2],s=this.transformInv_(i);let o;if(_){o=(modulo(r[0],u)+modulo(n[0],u))/2-modulo(s[0],u)}else o=(r[0]+n[0])/2-s[0];const h=(r[1]+n[1])/2-s[1];l=o*o+h*h>this.errorThresholdSquared_}if(l){if(Math.abs(t[0]-e[0])<=Math.abs(t[1]-e[1])){const d=[(i[0]+e[0])/2,(i[1]+e[1])/2],c=this.transformInv_(d),u=[(s[0]+t[0])/2,(s[1]+t[1])/2],_=this.transformInv_(u);this.addQuad_(t,i,d,u,r,o,c,_,a-1),this.addQuad_(u,d,e,s,_,c,n,h,a-1)}else{const d=[(t[0]+i[0])/2,(t[1]+i[1])/2],c=this.transformInv_(d),u=[(e[0]+s[0])/2,(e[1]+s[1])/2],_=this.transformInv_(u);this.addQuad_(t,d,u,s,r,c,_,h,a-1),this.addQuad_(d,i,e,u,c,o,n,_,a-1)}return}}if(_){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}0==(11&g)&&this.addTriangle_(t,e,s,r,n,h),0==(14&g)&&this.addTriangle_(t,e,i,r,n,o),g&&(0==(13&g)&&this.addTriangle_(i,s,t,o,h,r),0==(7&g)&&this.addTriangle_(i,s,e,o,h,n))}calculateSourceExtent(){const t=createEmpty();return this.triangles_.forEach((function(i,e,s){const r=i.source;extendCoordinate(t,r[0]),extendCoordinate(t,r[1]),extendCoordinate(t,r[2])})),t}getTriangles(){return this.triangles_}}export default Triangulation;
//# sourceMappingURL=/sm/b0177123c2cde8e8b5fda1e3c5c4220fb47d05b164735aa2da0215549c119fa7.map