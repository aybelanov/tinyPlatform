/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/structs/RBush.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import RBush_ from"rbush";import{createOrUpdate,equals}from"../extent.js";import{getUid}from"../util.js";import{isEmpty}from"../obj.js";class RBush{constructor(t){this.rbush_=new RBush_(t),this.items_={}}insert(t,e){const s={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};this.rbush_.insert(s),this.items_[getUid(e)]=s}load(t,e){const s=new Array(e.length);for(let r=0,i=e.length;r<i;r++){const i=t[r],n=e[r],h={minX:i[0],minY:i[1],maxX:i[2],maxY:i[3],value:n};s[r]=h,this.items_[getUid(n)]=h}this.rbush_.load(s)}remove(t){const e=getUid(t),s=this.items_[e];return delete this.items_[e],null!==this.rbush_.remove(s)}update(t,e){const s=this.items_[getUid(e)],r=[s.minX,s.minY,s.maxX,s.maxY];equals(r,t)||(this.remove(e),this.insert(t,e))}getAll(){return this.rbush_.all().map((function(t){return t.value}))}getInExtent(t){const e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(e).map((function(t){return t.value}))}forEach(t){return this.forEach_(this.getAll(),t)}forEachInExtent(t,e){return this.forEach_(this.getInExtent(t),e)}forEach_(t,e){let s;for(let r=0,i=t.length;r<i;r++)if(s=e(t[r]),s)return s;return s}isEmpty(){return isEmpty(this.items_)}clear(){this.rbush_.clear(),this.items_={}}getExtent(t){const e=this.rbush_.toJSON();return createOrUpdate(e.minX,e.minY,e.maxX,e.maxY,t)}concat(t){this.rbush_.load(t.rbush_.all());for(const e in t.items_)this.items_[e]=t.items_[e]}}export default RBush;
//# sourceMappingURL=/sm/47748b274de60cb1b021471f12363f28e4e5a360c1232a0c561e153a1edb9eee.map