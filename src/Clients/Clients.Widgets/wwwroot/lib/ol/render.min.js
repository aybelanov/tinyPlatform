/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/render.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import CanvasImmediateRenderer from"./render/canvas/Immediate.js";import{DEVICE_PIXEL_RATIO}from"./has.js";import{apply as applyTransform,create as createTransform,multiply as multiplyTransform,scale as scaleTransform}from"./transform.js";import{getSquaredTolerance}from"./renderer/vector.js";import{getTransformFromProjections,getUserProjection}from"./proj.js";export function toContext(e,r){const t=e.canvas,o=(r=r||{}).pixelRatio||DEVICE_PIXEL_RATIO,n=r.size;n&&(t.width=n[0]*o,t.height=n[1]*o,t.style.width=n[0]+"px",t.style.height=n[1]+"px");const a=[0,0,t.width,t.height],s=scaleTransform(createTransform(),o,o);return new CanvasImmediateRenderer(e,o,a,s,0)}export function getVectorContext(e){if(!(e.context instanceof CanvasRenderingContext2D))throw new Error("Only works for render events from Canvas 2D layers");const r=e.inversePixelTransform[0],t=e.inversePixelTransform[1],o=Math.sqrt(r*r+t*t),n=e.frameState,a=multiplyTransform(e.inversePixelTransform.slice(),n.coordinateToPixelTransform),s=getSquaredTolerance(n.viewState.resolution,o);let i;const m=getUserProjection();return m&&(i=getTransformFromProjections(m,n.viewState.projection)),new CanvasImmediateRenderer(e.context,o,n.extent,a,n.viewState.rotation,s,i)}export function getRenderPixel(e,r){return applyTransform(e.inversePixelTransform,r.slice(0))}
//# sourceMappingURL=/sm/92b8d97959429f3b2847ac3ae7c549a2e15480d918bf86634cab00df173bdd55.map