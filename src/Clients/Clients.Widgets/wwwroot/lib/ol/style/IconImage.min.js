/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/style/IconImage.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import EventTarget from"../events/Target.js";import EventType from"../events/EventType.js";import ImageState from"../ImageState.js";import{asString}from"../color.js";import{createCanvasContext2D}from"../dom.js";import{decodeFallback}from"../Image.js";import{shared as iconImageCache}from"./IconImageCache.js";let taintedTestContext=null;class IconImage extends EventTarget{constructor(t,e,i,a,s){super(),this.hitDetectionImage_=null,this.image_=t,this.crossOrigin_=i,this.canvas_={},this.color_=s,this.imageState_=void 0===a?ImageState.IDLE:a,this.size_=t&&t.width&&t.height?[t.width,t.height]:null,this.src_=e,this.tainted_}initializeImage_(){this.image_=new Image,null!==this.crossOrigin_&&(this.image_.crossOrigin=this.crossOrigin_)}isTainted_(){if(void 0===this.tainted_&&this.imageState_===ImageState.LOADED){taintedTestContext||(taintedTestContext=createCanvasContext2D(1,1,void 0,{willReadFrequently:!0})),taintedTestContext.drawImage(this.image_,0,0);try{taintedTestContext.getImageData(0,0,1,1),this.tainted_=!1}catch(t){taintedTestContext=null,this.tainted_=!0}}return!0===this.tainted_}dispatchChangeEvent_(){this.dispatchEvent(EventType.CHANGE)}handleImageError_(){this.imageState_=ImageState.ERROR,this.dispatchChangeEvent_()}handleImageLoad_(){this.imageState_=ImageState.LOADED,this.size_=[this.image_.width,this.image_.height],this.dispatchChangeEvent_()}getImage(t){return this.image_||this.initializeImage_(),this.replaceColor_(t),this.canvas_[t]?this.canvas_[t]:this.image_}getPixelRatio(t){return this.replaceColor_(t),this.canvas_[t]?t:1}getImageState(){return this.imageState_}getHitDetectionImage(){if(this.image_||this.initializeImage_(),!this.hitDetectionImage_)if(this.isTainted_()){const t=this.size_[0],e=this.size_[1],i=createCanvasContext2D(t,e);i.fillRect(0,0,t,e),this.hitDetectionImage_=i.canvas}else this.hitDetectionImage_=this.image_;return this.hitDetectionImage_}getSize(){return this.size_}getSrc(){return this.src_}load(){if(this.imageState_===ImageState.IDLE){this.image_||this.initializeImage_(),this.imageState_=ImageState.LOADING;try{void 0!==this.src_&&(this.image_.src=this.src_)}catch(t){this.handleImageError_()}this.image_ instanceof HTMLImageElement&&decodeFallback(this.image_,this.src_).then((t=>{this.image_=t,this.handleImageLoad_()})).catch(this.handleImageError_.bind(this))}}replaceColor_(t){if(!this.color_||this.canvas_[t]||this.imageState_!==ImageState.LOADED)return;const e=this.image_,i=document.createElement("canvas");i.width=Math.ceil(e.width*t),i.height=Math.ceil(e.height*t);const a=i.getContext("2d");a.scale(t,t),a.drawImage(e,0,0),a.globalCompositeOperation="multiply",a.fillStyle=asString(this.color_),a.fillRect(0,0,i.width/t,i.height/t),a.globalCompositeOperation="destination-in",a.drawImage(e,0,0),this.canvas_[t]=i}}export function get(t,e,i,a,s){let h=void 0===e?void 0:iconImageCache.get(e,i,s);return h||(h=new IconImage(t,t instanceof HTMLImageElement?t.src||void 0:e,i,a,s),iconImageCache.set(e,i,s,h)),h}export default IconImage;
//# sourceMappingURL=/sm/4c9b1e544b9fc97e63422d393d2ce1aa06aaafd436df576d2d48efb490614e4d.map