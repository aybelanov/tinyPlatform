/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/interaction/DblClickDragZoom.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Interaction from"./Interaction.js";import MapBrowserEventType from"../MapBrowserEventType.js";class DblClickDragZoom extends Interaction{constructor(e){const t=e||{};super(t),t.stopDown&&(this.stopDown=t.stopDown),this.scaleDeltaByPixel_=t.delta?t.delta:.01,this.duration_=void 0!==t.duration?t.duration:250,this.handlingDownUpSequence_=!1,this.handlingDoubleDownSequence_=!1,this.doubleTapTimeoutId_=void 0,this.trackedPointers_={},this.targetPointers=[]}handleEvent(e){if(!e.originalEvent)return!0;let t=!1;if(this.updateTrackedPointers_(e),this.handlingDownUpSequence_){if(e.type==MapBrowserEventType.POINTERDRAG)this.handleDragEvent(e),e.originalEvent.preventDefault();else if(e.type==MapBrowserEventType.POINTERUP){const t=this.handleUpEvent(e);this.handlingDownUpSequence_=t}}else if(e.type==MapBrowserEventType.POINTERDOWN)if(this.handlingDoubleDownSequence_){this.handlingDoubleDownSequence_=!1;const n=this.handleDownEvent(e);this.handlingDownUpSequence_=n,t=this.stopDown(n)}else t=this.stopDown(!1),this.waitForDblTap_();return!t}handleDragEvent(e){let t=1;const n=this.targetPointers[0],i=this.down_.originalEvent,o=n.clientY-i.clientY;void 0!==this.lastDistance_&&(t=1-(this.lastDistance_-o)*this.scaleDeltaByPixel_),this.lastDistance_=o,1!=t&&(this.lastScaleDelta_=t);const s=e.map,a=s.getView();s.render(),a.adjustResolutionInternal(t)}handleDownEvent(e){if(1==this.targetPointers.length){const t=e.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.down_=e,this.handlingDownUpSequence_||t.getView().beginInteraction(),!0}return!1}handleUpEvent(e){if(0==this.targetPointers.length){const t=e.map.getView(),n=this.lastScaleDelta_>1?1:-1;return t.endInteraction(this.duration_,n),this.handlingDownUpSequence_=!1,this.handlingDoubleDownSequence_=!1,!1}return!0}stopDown(e){return e}updateTrackedPointers_(e){if(isPointerDraggingEvent(e)){const t=e.originalEvent,n=t.pointerId.toString();e.type==MapBrowserEventType.POINTERUP?delete this.trackedPointers_[n]:(e.type==MapBrowserEventType.POINTERDOWN||n in this.trackedPointers_)&&(this.trackedPointers_[n]=t),this.targetPointers=Object.values(this.trackedPointers_)}}waitForDblTap_(){void 0!==this.doubleTapTimeoutId_?(clearTimeout(this.doubleTapTimeoutId_),this.doubleTapTimeoutId_=void 0):(this.handlingDoubleDownSequence_=!0,this.doubleTapTimeoutId_=setTimeout(this.endInteraction_.bind(this),250))}endInteraction_(){this.handlingDoubleDownSequence_=!1,this.doubleTapTimeoutId_=void 0}}function isPointerDraggingEvent(e){const t=e.type;return t===MapBrowserEventType.POINTERDOWN||t===MapBrowserEventType.POINTERDRAG||t===MapBrowserEventType.POINTERUP}export default DblClickDragZoom;
//# sourceMappingURL=/sm/7f30b483ce0084b0495d5193888160625d44e9ccc461fe584ba66749c1aba558.map