/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/layer/Layer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BaseLayer from"./Base.js";import EventType from"../events/EventType.js";import LayerProperty from"./Property.js";import RenderEventType from"../render/EventType.js";import View from"../View.js";import{assert}from"../asserts.js";import{intersects}from"../extent.js";import{listen,unlistenByKey}from"../events.js";class Layer extends BaseLayer{constructor(e){const t=Object.assign({},e);delete t.source,super(t),this.on,this.once,this.un,this.mapPrecomposeKey_=null,this.mapRenderKey_=null,this.sourceChangeKey_=null,this.renderer_=null,this.sourceReady_=!1,this.rendered=!1,e.render&&(this.render=e.render),e.map&&this.setMap(e.map),this.addChangeListener(LayerProperty.SOURCE,this.handleSourcePropertyChange_);const r=e.source?e.source:null;this.setSource(r)}getLayersArray(e){return(e=e||[]).push(this),e}getLayerStatesArray(e){return(e=e||[]).push(this.getLayerState()),e}getSource(){return this.get(LayerProperty.SOURCE)||null}getRenderSource(){return this.getSource()}getSourceState(){const e=this.getSource();return e?e.getState():"undefined"}handleSourceChange_(){this.changed(),this.sourceReady_||"ready"!==this.getSource().getState()||(this.sourceReady_=!0,this.dispatchEvent("sourceready"))}handleSourcePropertyChange_(){this.sourceChangeKey_&&(unlistenByKey(this.sourceChangeKey_),this.sourceChangeKey_=null),this.sourceReady_=!1;const e=this.getSource();e&&(this.sourceChangeKey_=listen(e,EventType.CHANGE,this.handleSourceChange_,this),"ready"===e.getState()&&(this.sourceReady_=!0,setTimeout((()=>{this.dispatchEvent("sourceready")}),0))),this.changed()}getFeatures(e){return this.renderer_?this.renderer_.getFeatures(e):Promise.resolve([])}getData(e){return this.renderer_&&this.rendered?this.renderer_.getData(e):null}isVisible(e){let t;const r=this.getMapInternal();let s;!e&&r&&(e=r.getView()),t=e instanceof View?{viewState:e.getState(),extent:e.calculateExtent()}:e,!t.layerStatesArray&&r&&(t.layerStatesArray=r.getLayerGroup().getLayerStatesArray()),s=t.layerStatesArray?t.layerStatesArray.find((e=>e.layer===this)):this.getLayerState();const n=this.getExtent();return inView(s,t.viewState)&&(!n||intersects(n,t.extent))}getAttributions(e){if(!this.isVisible(e))return[];let t;const r=this.getSource();if(r&&(t=r.getAttributions()),!t)return[];let s=t(e instanceof View?e.getViewStateAndExtent():e);return Array.isArray(s)||(s=[s]),s}render(e,t){const r=this.getRenderer();return r.prepareFrame(e)?(this.rendered=!0,r.renderFrame(e,t)):null}unrender(){this.rendered=!1}setMapInternal(e){e||this.unrender(),this.set(LayerProperty.MAP,e)}getMapInternal(){return this.get(LayerProperty.MAP)}setMap(e){this.mapPrecomposeKey_&&(unlistenByKey(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),e||this.changed(),this.mapRenderKey_&&(unlistenByKey(this.mapRenderKey_),this.mapRenderKey_=null),e&&(this.mapPrecomposeKey_=listen(e,RenderEventType.PRECOMPOSE,(function(e){const t=e.frameState.layerStatesArray,r=this.getLayerState(!1);assert(!t.some((function(e){return e.layer===r.layer})),"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both."),t.push(r)}),this),this.mapRenderKey_=listen(this,EventType.CHANGE,e.render,e),this.changed())}setSource(e){this.set(LayerProperty.SOURCE,e)}getRenderer(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_}hasRenderer(){return!!this.renderer_}createRenderer(){return null}disposeInternal(){this.renderer_&&(this.renderer_.dispose(),delete this.renderer_),this.setSource(null),super.disposeInternal()}}export function inView(e,t){if(!e.visible)return!1;const r=t.resolution;if(r<e.minResolution||r>=e.maxResolution)return!1;const s=t.zoom;return s>e.minZoom&&s<=e.maxZoom}export default Layer;
//# sourceMappingURL=/sm/7960487ba2d6931bd9a5d642eb7c04602d29e41c5caf751b62f623178b7e06f3.map