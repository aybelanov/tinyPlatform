/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/layer/WebGLTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BaseTileLayer from"./BaseTile.js";import LayerProperty from"../layer/Property.js";import WebGLTileLayerRenderer,{Attributes,Uniforms}from"../renderer/webgl/TileLayer.js";import{PALETTE_TEXTURE_ARRAY,ValueTypes,expressionToGlsl,getStringNumberEquivalent,uniformNameForVariable}from"../style/expressions.js";function parseStyle(e,r){const t=`\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `,n={inFragmentShader:!0,variables:[],attributes:[],functions:{},bandCount:r,style:e},o=[];if(void 0!==e.color){const r=expressionToGlsl(n,e.color,ValueTypes.COLOR);o.push(`color = ${r};`)}if(void 0!==e.contrast){const r=expressionToGlsl(n,e.contrast,ValueTypes.NUMBER);o.push(`color.rgb = clamp((${r} + 1.0) * color.rgb - (${r} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}if(void 0!==e.exposure){const r=expressionToGlsl(n,e.exposure,ValueTypes.NUMBER);o.push(`color.rgb = clamp((${r} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}if(void 0!==e.saturation){const r=expressionToGlsl(n,e.saturation,ValueTypes.NUMBER);o.push(`\n      float saturation = ${r} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `)}if(void 0!==e.gamma){const r=expressionToGlsl(n,e.gamma,ValueTypes.NUMBER);o.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${r}));`)}if(void 0!==e.brightness){const r=expressionToGlsl(n,e.brightness,ValueTypes.NUMBER);o.push(`color.rgb = clamp(color.rgb + ${r}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}const s={},i=n.variables.length;if(i>1&&!e.variables)throw new Error(`Missing variables in style (expected ${n.variables})`);for(let r=0;r<i;++r){const t=n.variables[r];if(!(t.name in e.variables))throw new Error(`Missing '${t.name}' in style variables`);s[uniformNameForVariable(t.name)]=function(){let r=e.variables[t.name];return"string"==typeof r&&(r=getStringNumberEquivalent(r)),void 0!==r?r:-9999999}}const a=Object.keys(s).map((function(e){return`uniform float ${e};`})),l=Math.ceil(r/4);a.push(`uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${l}];`),n.paletteTextures&&a.push(`uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${n.paletteTextures.length}];`);const u=Object.keys(n.functions).map((function(e){return n.functions[e]}));return{vertexShader:t,fragmentShader:`\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${a.join("\n")}\n\n    ${u.join("\n")}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${Uniforms.TILE_TEXTURE_ARRAY}[0],  v_textureCoord);\n\n      ${o.join("\n")}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`,uniforms:s,paletteTextures:n.paletteTextures}}class WebGLTileLayer extends BaseTileLayer{constructor(e){const r=(e=e?Object.assign({},e):{}).style||{};delete e.style;const t=e.cacheSize;delete e.cacheSize,super(e),this.sources_=e.sources,this.renderedSource_=null,this.renderedResolution_=NaN,this.style_=r,this.cacheSize_=t,this.styleVariables_=this.style_.variables||{},this.addChangeListener(LayerProperty.SOURCE,this.handleSourceUpdate_)}getSources(e,r){const t=this.getSource();return this.sources_?"function"==typeof this.sources_?this.sources_(e,r):this.sources_:t?[t]:[]}getRenderSource(){return this.renderedSource_||this.getSource()}getSourceState(){const e=this.getRenderSource();return e?e.getState():"undefined"}handleSourceUpdate_(){this.hasRenderer()&&this.getRenderer().clearCache(),this.getSource()&&this.setStyle(this.style_)}getSourceBandCount_(){const e=Number.MAX_SAFE_INTEGER,r=this.getSources([-e,-e,e,e],e);return r&&r.length&&"bandCount"in r[0]?r[0].bandCount:4}createRenderer(){const e=parseStyle(this.style_,this.getSourceBandCount_());return new WebGLTileLayerRenderer(this,{vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,cacheSize:this.cacheSize_,paletteTextures:e.paletteTextures})}renderSources(e,r){const t=this.getRenderer();let n;for(let o=0,s=r.length;o<s;++o)this.renderedSource_=r[o],t.prepareFrame(e)&&(n=t.renderFrame(e));return n}render(e,r){this.rendered=!0;const t=e.viewState,n=this.getSources(e.extent,t.resolution);let o=!0;for(let e=0,r=n.length;e<r;++e){const r=n[e],t=r.getState();if("loading"==t){const e=()=>{"ready"==r.getState()&&(r.removeEventListener("change",e),this.changed())};r.addEventListener("change",e)}o=o&&"ready"==t}const s=this.renderSources(e,n);if(this.getRenderer().renderComplete&&o)return this.renderedResolution_=t.resolution,s;if(this.renderedResolution_>.5*t.resolution){const r=this.getSources(e.extent,this.renderedResolution_).filter((e=>!n.includes(e)));if(r.length>0)return this.renderSources(e,r)}return s}setStyle(e){this.styleVariables_=e.variables||{},this.style_=e;const r=parseStyle(this.style_,this.getSourceBandCount_());this.getRenderer().reset({vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,uniforms:r.uniforms}),this.changed()}updateStyleVariables(e){Object.assign(this.styleVariables_,e),this.changed()}}WebGLTileLayer.prototype.dispose;export default WebGLTileLayer;
//# sourceMappingURL=/sm/3f6adce44cea202e84c3c1b19a2307a4744a54e287c1c643b02dae902d0ddf7b.map