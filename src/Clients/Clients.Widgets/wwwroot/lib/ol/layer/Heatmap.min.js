/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/layer/Heatmap.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BaseVector from"./BaseVector.js";import WebGLPointsLayerRenderer from"../renderer/webgl/PointsLayer.js";import{ShaderBuilder}from"../webgl/ShaderBuilder.js";import{clamp}from"../math.js";import{createCanvasContext2D}from"../dom.js";const Property={BLUR:"blur",GRADIENT:"gradient",RADIUS:"radius"},DEFAULT_GRADIENT=["#00f","#0ff","#0f0","#ff0","#f00"];class Heatmap extends BaseVector{constructor(e){e=e||{};const t=Object.assign({},e);delete t.gradient,delete t.radius,delete t.blur,delete t.weight,super(t),this.gradient_=null,this.addChangeListener(Property.GRADIENT,this.handleGradientChanged_),this.setGradient(e.gradient?e.gradient:DEFAULT_GRADIENT),this.setBlur(void 0!==e.blur?e.blur:15),this.setRadius(void 0!==e.radius?e.radius:8);const r=e.weight?e.weight:"weight";this.weightFunction_="string"==typeof r?function(e){return e.get(r)}:r,this.setRenderOrder(null)}getBlur(){return this.get(Property.BLUR)}getGradient(){return this.get(Property.GRADIENT)}getRadius(){return this.get(Property.RADIUS)}handleGradientChanged_(){this.gradient_=createGradient(this.getGradient())}setBlur(e){this.set(Property.BLUR,e)}setGradient(e){this.set(Property.GRADIENT,e)}setRadius(e){this.set(Property.RADIUS,e)}createRenderer(){const e=(new ShaderBuilder).addAttribute("float a_weight").addVarying("v_weight","float","a_weight").addUniform("float u_size").addUniform("float u_blurSlope").setSymbolSizeExpression("vec2(u_size)").setSymbolColorExpression("vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_weight)");return new WebGLPointsLayerRenderer(this,{className:this.getClassName(),attributes:[{name:"weight",callback:e=>{const t=this.weightFunction_(e);return void 0!==t?clamp(t,0,1):1}}],uniforms:{u_size:()=>2*(this.get(Property.RADIUS)+this.get(Property.BLUR)),u_blurSlope:()=>this.get(Property.RADIUS)/Math.max(1,this.get(Property.BLUR))},hitDetectionEnabled:!0,vertexShader:e.getSymbolVertexShader(),fragmentShader:e.getSymbolFragmentShader(),postProcesses:[{fragmentShader:"\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }",uniforms:{u_gradientTexture:()=>this.gradient_,u_opacity:()=>this.getOpacity()}}]})}renderDeclutter(){}}function createGradient(e){const t=createCanvasContext2D(1,256),r=t.createLinearGradient(0,0,1,256),i=1/(e.length-1);for(let t=0,a=e.length;t<a;++t)r.addColorStop(t*i,e[t]);return t.fillStyle=r,t.fillRect(0,0,1,256),t.canvas}export default Heatmap;
//# sourceMappingURL=/sm/3bed67fbeba8af8a83ed13f410c1f3f26f77cee15b0116b2a95d3880943d1b22.map