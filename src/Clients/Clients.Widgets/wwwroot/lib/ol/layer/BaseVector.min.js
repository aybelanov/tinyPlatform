/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/layer/BaseVector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Layer from"./Layer.js";import RBush from"rbush";import Style,{createDefaultStyle,toFunction as toStyleFunction}from"../style/Style.js";import{flatStylesToStyleFunction,rulesToStyleFunction}from"../render/canvas/style.js";const Property={RENDER_ORDER:"renderOrder"};class BaseVectorLayer extends Layer{constructor(e){e=e||{};const t=Object.assign({},e);delete t.style,delete t.renderBuffer,delete t.updateWhileAnimating,delete t.updateWhileInteracting,super(t),this.declutter_=void 0!==e.declutter&&e.declutter,this.renderBuffer_=void 0!==e.renderBuffer?e.renderBuffer:100,this.style_=null,this.styleFunction_=void 0,this.setStyle(e.style),this.updateWhileAnimating_=void 0!==e.updateWhileAnimating&&e.updateWhileAnimating,this.updateWhileInteracting_=void 0!==e.updateWhileInteracting&&e.updateWhileInteracting}getDeclutter(){return this.declutter_}getFeatures(e){return super.getFeatures(e)}getRenderBuffer(){return this.renderBuffer_}getRenderOrder(){return this.get(Property.RENDER_ORDER)}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}getUpdateWhileAnimating(){return this.updateWhileAnimating_}getUpdateWhileInteracting(){return this.updateWhileInteracting_}renderDeclutter(e){e.declutterTree||(e.declutterTree=new RBush(9)),this.getRenderer().renderDeclutter(e)}setRenderOrder(e){this.set(Property.RENDER_ORDER,e)}setStyle(e){this.style_=toStyleLike(e),this.styleFunction_=null===e?void 0:toStyleFunction(this.style_),this.changed()}}function toStyleLike(e){if(void 0===e)return createDefaultStyle;if(!e)return null;if("function"==typeof e)return e;if(e instanceof Style)return e;if(!Array.isArray(e))return flatStylesToStyleFunction([e]);if(0===e.length)return[];const t=e.length,r=e[0];if(r instanceof Style){const r=new Array(t);for(let n=0;n<t;++n){const t=e[n];if(!(t instanceof Style))throw new Error("Expected a list of style instances");r[n]=t}return r}if("style"in r){const r=new Array(t);for(let n=0;n<t;++n){const t=e[n];if(!("style"in t))throw new Error("Expected a list of rules with a style property");r[n]=t}return rulesToStyleFunction(r)}return flatStylesToStyleFunction(e)}export default BaseVectorLayer;
//# sourceMappingURL=/sm/8e74faf9b9e8d32fb0a82bfd82cc451114c48eac971a2f98947463405013bc9f.map