/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/math.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
export function clamp(t,n,o){return Math.min(Math.max(t,n),o)}export function squaredSegmentDistance(t,n,o,r,e,u){const c=e-o,i=u-r;if(0!==c||0!==i){const a=((t-o)*c+(n-r)*i)/(c*c+i*i);a>1?(o=e,r=u):a>0&&(o+=c*a,r+=i*a)}return squaredDistance(t,n,o,r)}export function squaredDistance(t,n,o,r){const e=o-t,u=r-n;return e*e+u*u}export function solveLinearSystem(t){const n=t.length;for(let o=0;o<n;o++){let r=o,e=Math.abs(t[o][o]);for(let u=o+1;u<n;u++){const n=Math.abs(t[u][o]);n>e&&(e=n,r=u)}if(0===e)return null;const u=t[r];t[r]=t[o],t[o]=u;for(let r=o+1;r<n;r++){const e=-t[r][o]/t[o][o];for(let u=o;u<n+1;u++)o==u?t[r][u]=0:t[r][u]+=e*t[o][u]}}const o=new Array(n);for(let r=n-1;r>=0;r--){o[r]=t[r][n]/t[r][r];for(let e=r-1;e>=0;e--)t[e][n]-=t[e][r]*o[r]}return o}export function toDegrees(t){return 180*t/Math.PI}export function toRadians(t){return t*Math.PI/180}export function modulo(t,n){const o=t%n;return o*n<0?o+n:o}export function lerp(t,n,o){return t+o*(n-t)}export function toFixed(t,n){const o=Math.pow(10,n);return Math.round(t*o)/o}export function round(t,n){return Math.round(toFixed(t,n))}export function floor(t,n){return Math.floor(toFixed(t,n))}export function ceil(t,n){return Math.ceil(toFixed(t,n))}
//# sourceMappingURL=/sm/41bea6d16e49188eef4be7ad029b09438d57a1e090cac905bf1fbd3906eb79db.map