/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/render/canvas/Immediate.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import VectorContext from"../VectorContext.js";import{asColorLike}from"../../colorlike.js";import{compose as composeTransform,create as createTransform}from"../../transform.js";import{defaultFillStyle,defaultFont,defaultLineCap,defaultLineDash,defaultLineDashOffset,defaultLineJoin,defaultLineWidth,defaultMiterLimit,defaultStrokeStyle,defaultTextAlign,defaultTextBaseline}from"../canvas.js";import{equals}from"../../array.js";import{intersects}from"../../extent.js";import{toFixed}from"../../math.js";import{transform2D}from"../../geom/flat/transform.js";import{transformGeom2D}from"../../geom/SimpleGeometry.js";class CanvasImmediateRenderer extends VectorContext{constructor(t,e,i,s,a,o,l){super(),this.context_=t,this.pixelRatio_=e,this.extent_=i,this.transform_=s,this.transformRotation_=s?toFixed(Math.atan2(s[1],s[0]),10):0,this.viewRotation_=a,this.squaredTolerance_=o,this.userTransform_=l,this.contextFillState_=null,this.contextStrokeState_=null,this.contextTextState_=null,this.fillState_=null,this.strokeState_=null,this.image_=null,this.imageAnchorX_=0,this.imageAnchorY_=0,this.imageHeight_=0,this.imageOpacity_=0,this.imageOriginX_=0,this.imageOriginY_=0,this.imageRotateWithView_=!1,this.imageRotation_=0,this.imageScale_=[0,0],this.imageWidth_=0,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=!1,this.textRotation_=0,this.textScale_=[0,0],this.textFillState_=null,this.textStrokeState_=null,this.textState_=null,this.pixelCoordinates_=[],this.tmpLocalTransform_=createTransform()}drawImages_(t,e,i,s){if(!this.image_)return;const a=transform2D(t,e,i,s,this.transform_,this.pixelCoordinates_),o=this.context_,l=this.tmpLocalTransform_,n=o.globalAlpha;1!=this.imageOpacity_&&(o.globalAlpha=n*this.imageOpacity_);let r=this.imageRotation_;0===this.transformRotation_&&(r-=this.viewRotation_),this.imageRotateWithView_&&(r+=this.viewRotation_);for(let t=0,e=a.length;t<e;t+=2){const e=a[t]-this.imageAnchorX_,i=a[t+1]-this.imageAnchorY_;if(0!==r||1!=this.imageScale_[0]||1!=this.imageScale_[1]){const t=e+this.imageAnchorX_,s=i+this.imageAnchorY_;composeTransform(l,t,s,1,1,r,-t,-s),o.save(),o.transform.apply(o,l),o.translate(t,s),o.scale(this.imageScale_[0],this.imageScale_[1]),o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,-this.imageAnchorX_,-this.imageAnchorY_,this.imageWidth_,this.imageHeight_),o.restore()}else o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,e,i,this.imageWidth_,this.imageHeight_)}1!=this.imageOpacity_&&(o.globalAlpha=n)}drawText_(t,e,i,s){if(!this.textState_||""===this.text_)return;this.textFillState_&&this.setContextFillState_(this.textFillState_),this.textStrokeState_&&this.setContextStrokeState_(this.textStrokeState_),this.setContextTextState_(this.textState_);const a=transform2D(t,e,i,s,this.transform_,this.pixelCoordinates_),o=this.context_;let l=this.textRotation_;for(0===this.transformRotation_&&(l-=this.viewRotation_),this.textRotateWithView_&&(l+=this.viewRotation_);e<i;e+=s){const t=a[e]+this.textOffsetX_,i=a[e+1]+this.textOffsetY_;0!==l||1!=this.textScale_[0]||1!=this.textScale_[1]?(o.save(),o.translate(t-this.textOffsetX_,i-this.textOffsetY_),o.rotate(l),o.translate(this.textOffsetX_,this.textOffsetY_),o.scale(this.textScale_[0],this.textScale_[1]),this.textStrokeState_&&o.strokeText(this.text_,0,0),this.textFillState_&&o.fillText(this.text_,0,0),o.restore()):(this.textStrokeState_&&o.strokeText(this.text_,t,i),this.textFillState_&&o.fillText(this.text_,t,i))}}moveToLineTo_(t,e,i,s,a){const o=this.context_,l=transform2D(t,e,i,s,this.transform_,this.pixelCoordinates_);o.moveTo(l[0],l[1]);let n=l.length;a&&(n-=2);for(let t=2;t<n;t+=2)o.lineTo(l[t],l[t+1]);return a&&o.closePath(),i}drawRings_(t,e,i,s){for(let a=0,o=i.length;a<o;++a)e=this.moveToLineTo_(t,e,i[a],s,!0);return e}drawCircle(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),intersects(this.extent_,t.getExtent())){if(this.fillState_||this.strokeState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const e=transformGeom2D(t,this.transform_,this.pixelCoordinates_),i=e[2]-e[0],s=e[3]-e[1],a=Math.sqrt(i*i+s*s),o=this.context_;o.beginPath(),o.arc(e[0],e[1],a,0,2*Math.PI),this.fillState_&&o.fill(),this.strokeState_&&o.stroke()}""!==this.text_&&this.drawText_(t.getCenter(),0,2,2)}}setStyle(t){this.setFillStrokeStyle(t.getFill(),t.getStroke()),this.setImageStyle(t.getImage()),this.setTextStyle(t.getText())}setTransform(t){this.transform_=t}drawGeometry(t){switch(t.getType()){case"Point":this.drawPoint(t);break;case"LineString":this.drawLineString(t);break;case"Polygon":this.drawPolygon(t);break;case"MultiPoint":this.drawMultiPoint(t);break;case"MultiLineString":this.drawMultiLineString(t);break;case"MultiPolygon":this.drawMultiPolygon(t);break;case"GeometryCollection":this.drawGeometryCollection(t);break;case"Circle":this.drawCircle(t)}}drawFeature(t,e){const i=e.getGeometryFunction()(t);i&&(this.setStyle(e),this.drawGeometry(i))}drawGeometryCollection(t){const e=t.getGeometriesArray();for(let t=0,i=e.length;t<i;++t)this.drawGeometry(e[t])}drawPoint(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const e=t.getFlatCoordinates(),i=t.getStride();this.image_&&this.drawImages_(e,0,e.length,i),""!==this.text_&&this.drawText_(e,0,e.length,i)}drawMultiPoint(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const e=t.getFlatCoordinates(),i=t.getStride();this.image_&&this.drawImages_(e,0,e.length,i),""!==this.text_&&this.drawText_(e,0,e.length,i)}drawLineString(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),intersects(this.extent_,t.getExtent())){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const e=this.context_,i=t.getFlatCoordinates();e.beginPath(),this.moveToLineTo_(i,0,i.length,t.getStride(),!1),e.stroke()}if(""!==this.text_){const e=t.getFlatMidpoint();this.drawText_(e,0,2,2)}}}drawMultiLineString(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const e=t.getExtent();if(intersects(this.extent_,e)){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const e=this.context_,i=t.getFlatCoordinates();let s=0;const a=t.getEnds(),o=t.getStride();e.beginPath();for(let t=0,e=a.length;t<e;++t)s=this.moveToLineTo_(i,s,a[t],o,!1);e.stroke()}if(""!==this.text_){const e=t.getFlatMidpoints();this.drawText_(e,0,e.length,2)}}}drawPolygon(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),intersects(this.extent_,t.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const e=this.context_;e.beginPath(),this.drawRings_(t.getOrientedFlatCoordinates(),0,t.getEnds(),t.getStride()),this.fillState_&&e.fill(),this.strokeState_&&e.stroke()}if(""!==this.text_){const e=t.getFlatInteriorPoint();this.drawText_(e,0,2,2)}}}drawMultiPolygon(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),intersects(this.extent_,t.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const e=this.context_,i=t.getOrientedFlatCoordinates();let s=0;const a=t.getEndss(),o=t.getStride();e.beginPath();for(let t=0,e=a.length;t<e;++t){const e=a[t];s=this.drawRings_(i,s,e,o)}this.fillState_&&e.fill(),this.strokeState_&&e.stroke()}if(""!==this.text_){const e=t.getFlatInteriorPoints();this.drawText_(e,0,e.length,2)}}}setContextFillState_(t){const e=this.context_,i=this.contextFillState_;i?i.fillStyle!=t.fillStyle&&(i.fillStyle=t.fillStyle,e.fillStyle=t.fillStyle):(e.fillStyle=t.fillStyle,this.contextFillState_={fillStyle:t.fillStyle})}setContextStrokeState_(t){const e=this.context_,i=this.contextStrokeState_;i?(i.lineCap!=t.lineCap&&(i.lineCap=t.lineCap,e.lineCap=t.lineCap),equals(i.lineDash,t.lineDash)||e.setLineDash(i.lineDash=t.lineDash),i.lineDashOffset!=t.lineDashOffset&&(i.lineDashOffset=t.lineDashOffset,e.lineDashOffset=t.lineDashOffset),i.lineJoin!=t.lineJoin&&(i.lineJoin=t.lineJoin,e.lineJoin=t.lineJoin),i.lineWidth!=t.lineWidth&&(i.lineWidth=t.lineWidth,e.lineWidth=t.lineWidth),i.miterLimit!=t.miterLimit&&(i.miterLimit=t.miterLimit,e.miterLimit=t.miterLimit),i.strokeStyle!=t.strokeStyle&&(i.strokeStyle=t.strokeStyle,e.strokeStyle=t.strokeStyle)):(e.lineCap=t.lineCap,e.setLineDash(t.lineDash),e.lineDashOffset=t.lineDashOffset,e.lineJoin=t.lineJoin,e.lineWidth=t.lineWidth,e.miterLimit=t.miterLimit,e.strokeStyle=t.strokeStyle,this.contextStrokeState_={lineCap:t.lineCap,lineDash:t.lineDash,lineDashOffset:t.lineDashOffset,lineJoin:t.lineJoin,lineWidth:t.lineWidth,miterLimit:t.miterLimit,strokeStyle:t.strokeStyle})}setContextTextState_(t){const e=this.context_,i=this.contextTextState_,s=t.textAlign?t.textAlign:defaultTextAlign;i?(i.font!=t.font&&(i.font=t.font,e.font=t.font),i.textAlign!=s&&(i.textAlign=s,e.textAlign=s),i.textBaseline!=t.textBaseline&&(i.textBaseline=t.textBaseline,e.textBaseline=t.textBaseline)):(e.font=t.font,e.textAlign=s,e.textBaseline=t.textBaseline,this.contextTextState_={font:t.font,textAlign:s,textBaseline:t.textBaseline})}setFillStrokeStyle(t,e){if(t){const e=t.getColor();this.fillState_={fillStyle:asColorLike(e||defaultFillStyle)}}else this.fillState_=null;if(e){const t=e.getColor(),i=e.getLineCap(),s=e.getLineDash(),a=e.getLineDashOffset(),o=e.getLineJoin(),l=e.getWidth(),n=e.getMiterLimit(),r=s||defaultLineDash;this.strokeState_={lineCap:void 0!==i?i:defaultLineCap,lineDash:1===this.pixelRatio_?r:r.map((t=>t*this.pixelRatio_)),lineDashOffset:(a||defaultLineDashOffset)*this.pixelRatio_,lineJoin:void 0!==o?o:defaultLineJoin,lineWidth:(void 0!==l?l:defaultLineWidth)*this.pixelRatio_,miterLimit:void 0!==n?n:defaultMiterLimit,strokeStyle:asColorLike(t||defaultStrokeStyle)}}else this.strokeState_=null}setImageStyle(t){let e;if(!t||!(e=t.getSize()))return void(this.image_=null);const i=t.getPixelRatio(this.pixelRatio_),s=t.getAnchor(),a=t.getOrigin();this.image_=t.getImage(this.pixelRatio_),this.imageAnchorX_=s[0]*i,this.imageAnchorY_=s[1]*i,this.imageHeight_=e[1]*i,this.imageOpacity_=t.getOpacity(),this.imageOriginX_=a[0],this.imageOriginY_=a[1],this.imageRotateWithView_=t.getRotateWithView(),this.imageRotation_=t.getRotation();const o=t.getScaleArray();this.imageScale_=[o[0]*this.pixelRatio_/i,o[1]*this.pixelRatio_/i],this.imageWidth_=e[0]*i}setTextStyle(t){if(t){const e=t.getFill();if(e){const t=e.getColor();this.textFillState_={fillStyle:asColorLike(t||defaultFillStyle)}}else this.textFillState_=null;const i=t.getStroke();if(i){const t=i.getColor(),e=i.getLineCap(),s=i.getLineDash(),a=i.getLineDashOffset(),o=i.getLineJoin(),l=i.getWidth(),n=i.getMiterLimit();this.textStrokeState_={lineCap:void 0!==e?e:defaultLineCap,lineDash:s||defaultLineDash,lineDashOffset:a||defaultLineDashOffset,lineJoin:void 0!==o?o:defaultLineJoin,lineWidth:void 0!==l?l:defaultLineWidth,miterLimit:void 0!==n?n:defaultMiterLimit,strokeStyle:asColorLike(t||defaultStrokeStyle)}}else this.textStrokeState_=null;const s=t.getFont(),a=t.getOffsetX(),o=t.getOffsetY(),l=t.getRotateWithView(),n=t.getRotation(),r=t.getScaleArray(),h=t.getText(),_=t.getTextAlign(),f=t.getTextBaseline();this.textState_={font:void 0!==s?s:defaultFont,textAlign:void 0!==_?_:defaultTextAlign,textBaseline:void 0!==f?f:defaultTextBaseline},this.text_=void 0!==h?Array.isArray(h)?h.reduce(((t,e,i)=>t+(i%2?" ":e)),""):h:"",this.textOffsetX_=void 0!==a?this.pixelRatio_*a:0,this.textOffsetY_=void 0!==o?this.pixelRatio_*o:0,this.textRotateWithView_=void 0!==l&&l,this.textRotation_=void 0!==n?n:0,this.textScale_=[this.pixelRatio_*r[0],this.pixelRatio_*r[1]]}else this.text_=""}}export default CanvasImmediateRenderer;
//# sourceMappingURL=/sm/6d022ce7a0472cb5ff21d67b7849ff90cda33d60da2f45916d90d3b2b936681d.map