/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/ol@8.1.0/render/Feature.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import{LineString,MultiLineString,MultiPoint,MultiPolygon,Point,Polygon}from"../geom.js";import{compose as composeTransform,create as createTransform}from"../transform.js";import{createOrUpdateFromCoordinate,createOrUpdateFromFlatCoordinates,getCenter,getHeight}from"../extent.js";import{extend}from"../array.js";import{getInteriorPointOfArray,getInteriorPointsOfMultiArray}from"../geom/flat/interiorpoint.js";import{get as getProjection}from"../proj.js";import{inflateEnds}from"../geom/flat/orient.js";import{interpolatePoint}from"../geom/flat/interpolate.js";import{linearRingss as linearRingssCenter}from"../geom/flat/center.js";import{transform2D}from"../geom/flat/transform.js";const tmpTransform=createTransform();class RenderFeature{constructor(t,e,r,o,i){this.styleFunction,this.extent_,this.id_=i,this.type_=t,this.flatCoordinates_=e,this.flatInteriorPoints_=null,this.flatMidpoints_=null,this.ends_=r,this.properties_=o}get(t){return this.properties_[t]}getExtent(){return this.extent_||(this.extent_="Point"===this.type_?createOrUpdateFromCoordinate(this.flatCoordinates_):createOrUpdateFromFlatCoordinates(this.flatCoordinates_,0,this.flatCoordinates_.length,2)),this.extent_}getFlatInteriorPoint(){if(!this.flatInteriorPoints_){const t=getCenter(this.getExtent());this.flatInteriorPoints_=getInteriorPointOfArray(this.flatCoordinates_,0,this.ends_,2,t,0)}return this.flatInteriorPoints_}getFlatInteriorPoints(){if(!this.flatInteriorPoints_){const t=linearRingssCenter(this.flatCoordinates_,0,this.ends_,2);this.flatInteriorPoints_=getInteriorPointsOfMultiArray(this.flatCoordinates_,0,this.ends_,2,t)}return this.flatInteriorPoints_}getFlatMidpoint(){return this.flatMidpoints_||(this.flatMidpoints_=interpolatePoint(this.flatCoordinates_,0,this.flatCoordinates_.length,2,.5)),this.flatMidpoints_}getFlatMidpoints(){if(!this.flatMidpoints_){this.flatMidpoints_=[];const t=this.flatCoordinates_;let e=0;const r=this.ends_;for(let o=0,i=r.length;o<i;++o){const i=r[o],n=interpolatePoint(t,e,i,2,.5);extend(this.flatMidpoints_,n),e=i}}return this.flatMidpoints_}getId(){return this.id_}getOrientedFlatCoordinates(){return this.flatCoordinates_}getGeometry(){return this}getSimplifiedGeometry(t){return this}simplifyTransformed(t,e){return this}getProperties(){return this.properties_}getPropertiesInternal(){return this.properties_}getStride(){return 2}getStyleFunction(){return this.styleFunction}getType(){return this.type_}transform(t){const e=(t=getProjection(t)).getExtent(),r=t.getWorldExtent();if(e&&r){const t=getHeight(r)/getHeight(e);composeTransform(tmpTransform,r[0],r[3],t,-t,0,0,0),transform2D(this.flatCoordinates_,0,this.flatCoordinates_.length,2,tmpTransform,this.flatCoordinates_)}}getEnds(){return this.ends_}}RenderFeature.prototype.getEndss=RenderFeature.prototype.getEnds,RenderFeature.prototype.getFlatCoordinates=RenderFeature.prototype.getOrientedFlatCoordinates;export function toGeometry(t){const e=t.getType();switch(e){case"Point":return new Point(t.getFlatCoordinates());case"MultiPoint":return new MultiPoint(t.getFlatCoordinates(),"XY");case"LineString":return new LineString(t.getFlatCoordinates(),"XY");case"MultiLineString":return new MultiLineString(t.getFlatCoordinates(),"XY",t.getEnds());case"Polygon":const r=t.getFlatCoordinates(),o=t.getEnds(),i=inflateEnds(r,o);return i.length>1?new MultiPolygon(r,"XY",i):new Polygon(r,"XY",o);default:throw new Error("Invalid geometry type:"+e)}}export function toFeature(t,e){const r=t.getId(),o=toGeometry(t),i=t.getProperties(),n=new Feature;return void 0!==e&&n.setGeometryName(e),n.setGeometry(o),void 0!==r&&n.setId(r),n.setProperties(i,!0),n}export default RenderFeature;
//# sourceMappingURL=/sm/2ae1210a62ca88d7a3a0e1e8cf2bfd803ac3d949c5c399acf0c0ce868ec5f6da.map