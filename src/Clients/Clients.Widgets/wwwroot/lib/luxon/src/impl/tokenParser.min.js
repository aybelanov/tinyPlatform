/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/luxon@3.4.3/src/impl/tokenParser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{parseMillis,isUndefined,untruncateYear,signedOffset,hasOwnProperty}from"./util.js";import Formatter from"./formatter.js";import FixedOffsetZone from"../zones/fixedOffsetZone.js";import IANAZone from"../zones/IANAZone.js";import DateTime from"../datetime.js";import{digitRegex,parseDigits}from"./digits.js";import{ConflictingSpecificationError}from"../errors.js";const MISSING_FTP="missing Intl.DateTimeFormat.formatToParts support";function intUnit(e,r=(e=>e)){return{regex:e,deser:([e])=>r(parseDigits(e))}}const NBSP=String.fromCharCode(160),spaceOrNBSP=`[ ${NBSP}]`,spaceOrNBSPRegExp=new RegExp(spaceOrNBSP,"g");function fixListRegex(e){return e.replace(/\./g,"\\.?").replace(spaceOrNBSPRegExp,spaceOrNBSP)}function stripInsensitivities(e){return e.replace(/\./g,"").replace(spaceOrNBSPRegExp," ").toLowerCase()}function oneOf(e,r){return null===e?null:{regex:RegExp(e.map(fixListRegex).join("|")),deser:([t])=>e.findIndex((e=>stripInsensitivities(t)===stripInsensitivities(e)))+r}}function offset(e,r){return{regex:e,deser:([,e,r])=>signedOffset(e,r),groups:r}}function simple(e){return{regex:e,deser:([e])=>e}}function escapeToken(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function unitForToken(e,r){const t=digitRegex(r),n=digitRegex(r,"{2}"),s=digitRegex(r,"{3}"),i=digitRegex(r,"{4}"),o=digitRegex(r,"{6}"),a=digitRegex(r,"{1,2}"),c=digitRegex(r,"{1,3}"),u=digitRegex(r,"{1,6}"),m=digitRegex(r,"{1,9}"),l=digitRegex(r,"{2,4}"),d=digitRegex(r,"{4,6}"),f=e=>({regex:RegExp(escapeToken(e.val)),deser:([e])=>e,literal:!0}),p=(p=>{if(e.literal)return f(p);switch(p.val){case"G":return oneOf(r.eras("short"),0);case"GG":return oneOf(r.eras("long"),0);case"y":return intUnit(u);case"yy":case"kk":return intUnit(l,untruncateYear);case"yyyy":case"kkkk":return intUnit(i);case"yyyyy":return intUnit(d);case"yyyyyy":return intUnit(o);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return intUnit(a);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return intUnit(n);case"MMM":return oneOf(r.months("short",!0),1);case"MMMM":return oneOf(r.months("long",!0),1);case"LLL":return oneOf(r.months("short",!1),1);case"LLLL":return oneOf(r.months("long",!1),1);case"o":case"S":return intUnit(c);case"ooo":case"SSS":return intUnit(s);case"u":return simple(m);case"uu":return simple(a);case"uuu":case"E":case"c":return intUnit(t);case"a":return oneOf(r.meridiems(),0);case"EEE":return oneOf(r.weekdays("short",!1),1);case"EEEE":return oneOf(r.weekdays("long",!1),1);case"ccc":return oneOf(r.weekdays("short",!0),1);case"cccc":return oneOf(r.weekdays("long",!0),1);case"Z":case"ZZ":return offset(new RegExp(`([+-]${a.source})(?::(${n.source}))?`),2);case"ZZZ":return offset(new RegExp(`([+-]${a.source})(${n.source})?`),2);case"z":return simple(/[a-z_+-/]{1,256}?/i);case" ":return simple(/[^\S\n\r]/);default:return f(p)}})(e)||{invalidReason:MISSING_FTP};return p.token=e,p}const partTypeStyleToTokenVal={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};function tokenForPart(e,r,t){const{type:n,value:s}=e;if("literal"===n){const e=/^\s+$/.test(s);return{literal:!e,val:e?" ":s}}const i=r[n];let o=n;"hour"===n&&(o=null!=r.hour12?r.hour12?"hour12":"hour24":null!=r.hourCycle?"h11"===r.hourCycle||"h12"===r.hourCycle?"hour12":"hour24":t.hour12?"hour12":"hour24");let a=partTypeStyleToTokenVal[o];if("object"==typeof a&&(a=a[i]),a)return{literal:!1,val:a}}function buildRegex(e){return[`^${e.map((e=>e.regex)).reduce(((e,r)=>`${e}(${r.source})`),"")}$`,e]}function match(e,r,t){const n=e.match(r);if(n){const e={};let r=1;for(const s in t)if(hasOwnProperty(t,s)){const i=t[s],o=i.groups?i.groups+1:1;!i.literal&&i.token&&(e[i.token.val[0]]=i.deser(n.slice(r,r+o))),r+=o}return[n,e]}return[n,{}]}function dateTimeFromMatches(e){let r,t=null;isUndefined(e.z)||(t=IANAZone.create(e.z)),isUndefined(e.Z)||(t||(t=new FixedOffsetZone(e.Z)),r=e.Z),isUndefined(e.q)||(e.M=3*(e.q-1)+1),isUndefined(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),isUndefined(e.u)||(e.S=parseMillis(e.u));return[Object.keys(e).reduce(((r,t)=>{const n=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(t);return n&&(r[n]=e[t]),r}),{}),t,r]}let dummyDateTimeCache=null;function getDummyDateTime(){return dummyDateTimeCache||(dummyDateTimeCache=DateTime.fromMillis(1555555555555)),dummyDateTimeCache}function maybeExpandMacroToken(e,r){if(e.literal)return e;const t=formatOptsToTokens(Formatter.macroTokenToFormatOpts(e.val),r);return null==t||t.includes(void 0)?e:t}export function expandMacroTokens(e,r){return Array.prototype.concat(...e.map((e=>maybeExpandMacroToken(e,r))))}export function explainFromTokens(e,r,t){const n=expandMacroTokens(Formatter.parseFormat(t),e),s=n.map((r=>unitForToken(r,e))),i=s.find((e=>e.invalidReason));if(i)return{input:r,tokens:n,invalidReason:i.invalidReason};{const[e,t]=buildRegex(s),i=RegExp(e,"i"),[o,a]=match(r,i,t),[c,u,m]=a?dateTimeFromMatches(a):[null,null,void 0];if(hasOwnProperty(a,"a")&&hasOwnProperty(a,"H"))throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");return{input:r,tokens:n,regex:i,rawMatches:o,matches:a,result:c,zone:u,specificOffset:m}}}export function parseFromTokens(e,r,t){const{result:n,zone:s,specificOffset:i,invalidReason:o}=explainFromTokens(e,r,t);return[n,s,i,o]}export function formatOptsToTokens(e,r){if(!e)return null;const t=Formatter.create(r,e).dtFormatter(getDummyDateTime()),n=t.formatToParts(),s=t.resolvedOptions();return n.map((r=>tokenForPart(r,e,s)))}
//# sourceMappingURL=/sm/db7200ce60d0f5a14b388dc024e2f4a318f7ba6123cd21fbce6c8c6f763d08e0.map