/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/luxon@3.4.3/src/impl/english.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as Formats from"./formats.js";import{pick}from"./util.js";function stringify(r){return JSON.stringify(r,Object.keys(r).sort())}export const monthsLong=["January","February","March","April","May","June","July","August","September","October","November","December"];export const monthsShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];export const monthsNarrow=["J","F","M","A","M","J","J","A","S","O","N","D"];export function months(r){switch(r){case"narrow":return[...monthsNarrow];case"short":return[...monthsShort];case"long":return[...monthsLong];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}export const weekdaysLong=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];export const weekdaysShort=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];export const weekdaysNarrow=["M","T","W","T","F","S","S"];export function weekdays(r){switch(r){case"narrow":return[...weekdaysNarrow];case"short":return[...weekdaysShort];case"long":return[...weekdaysLong];case"numeric":return["1","2","3","4","5","6","7"];default:return null}}export const meridiems=["AM","PM"];export const erasLong=["Before Christ","Anno Domini"];export const erasShort=["BC","AD"];export const erasNarrow=["B","A"];export function eras(r){switch(r){case"narrow":return[...erasNarrow];case"short":return[...erasShort];case"long":return[...erasLong];default:return null}}export function meridiemForDateTime(r){return meridiems[r.hour<12?0:1]}export function weekdayForDateTime(r,e){return weekdays(e)[r.weekday-1]}export function monthForDateTime(r,e){return months(e)[r.month-1]}export function eraForDateTime(r,e){return eras(e)[r.year<0?0:1]}export function formatRelativeTime(r,e,t="always",s=!1){const n={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},a=-1===["hours","minutes","seconds"].indexOf(r);if("auto"===t&&a){const t="days"===r;switch(e){case 1:return t?"tomorrow":`next ${n[r][0]}`;case-1:return t?"yesterday":`last ${n[r][0]}`;case 0:return t?"today":`this ${n[r][0]}`}}const o=Object.is(e,-0)||e<0,y=Math.abs(e),i=1===y,m=n[r],u=s?i?m[1]:m[2]||m[1]:i?n[r][0]:r;return o?`${y} ${u} ago`:`in ${y} ${u}`}export function formatString(r){const e="EEEE, LLLL d, yyyy, h:mm a";switch(stringify(pick(r,["weekday","era","year","month","day","hour","minute","second","timeZoneName","hourCycle"]))){case stringify(Formats.DATE_SHORT):return"M/d/yyyy";case stringify(Formats.DATE_MED):return"LLL d, yyyy";case stringify(Formats.DATE_MED_WITH_WEEKDAY):return"EEE, LLL d, yyyy";case stringify(Formats.DATE_FULL):return"LLLL d, yyyy";case stringify(Formats.DATE_HUGE):return"EEEE, LLLL d, yyyy";case stringify(Formats.TIME_SIMPLE):return"h:mm a";case stringify(Formats.TIME_WITH_SECONDS):return"h:mm:ss a";case stringify(Formats.TIME_WITH_SHORT_OFFSET):case stringify(Formats.TIME_WITH_LONG_OFFSET):return"h:mm a";case stringify(Formats.TIME_24_SIMPLE):return"HH:mm";case stringify(Formats.TIME_24_WITH_SECONDS):return"HH:mm:ss";case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):case stringify(Formats.TIME_24_WITH_LONG_OFFSET):return"HH:mm";case stringify(Formats.DATETIME_SHORT):return"M/d/yyyy, h:mm a";case stringify(Formats.DATETIME_MED):return"LLL d, yyyy, h:mm a";case stringify(Formats.DATETIME_FULL):return"LLLL d, yyyy, h:mm a";case stringify(Formats.DATETIME_HUGE):return e;case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):return"M/d/yyyy, h:mm:ss a";case stringify(Formats.DATETIME_MED_WITH_SECONDS):return"LLL d, yyyy, h:mm:ss a";case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):return"EEE, d LLL yyyy, h:mm a";case stringify(Formats.DATETIME_FULL_WITH_SECONDS):return"LLLL d, yyyy, h:mm:ss a";case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):return"EEEE, LLLL d, yyyy, h:mm:ss a";default:return e}}
//# sourceMappingURL=/sm/c89eb3dd62ea6f401456f0d8fe9c23fd0e8aa5813413b956c76e7656e780e127.map