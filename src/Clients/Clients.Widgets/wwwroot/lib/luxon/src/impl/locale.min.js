/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/luxon@3.4.3/src/impl/locale.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{padStart,roundTo,hasRelative,formatOffset}from"./util.js";import*as English from"./english.js";import Settings from"../settings.js";import DateTime from"../datetime.js";import IANAZone from"../zones/IANAZone.js";let intlLFCache={};function getCachedLF(t,e={}){const s=JSON.stringify([t,e]);let n=intlLFCache[s];return n||(n=new Intl.ListFormat(t,e),intlLFCache[s]=n),n}let intlDTCache={};function getCachedDTF(t,e={}){const s=JSON.stringify([t,e]);let n=intlDTCache[s];return n||(n=new Intl.DateTimeFormat(t,e),intlDTCache[s]=n),n}let intlNumCache={};function getCachedINF(t,e={}){const s=JSON.stringify([t,e]);let n=intlNumCache[s];return n||(n=new Intl.NumberFormat(t,e),intlNumCache[s]=n),n}let intlRelCache={};function getCachedRTF(t,e={}){const{base:s,...n}=e,i=JSON.stringify([t,n]);let r=intlRelCache[i];return r||(r=new Intl.RelativeTimeFormat(t,e),intlRelCache[i]=r),r}let sysLocaleCache=null;function systemLocale(){return sysLocaleCache||(sysLocaleCache=(new Intl.DateTimeFormat).resolvedOptions().locale,sysLocaleCache)}function parseLocaleString(t){const e=t.indexOf("-x-");-1!==e&&(t=t.substring(0,e));const s=t.indexOf("-u-");if(-1===s)return[t];{let e,n;try{e=getCachedDTF(t).resolvedOptions(),n=t}catch(i){const r=t.substring(0,s);e=getCachedDTF(r).resolvedOptions(),n=r}const{numberingSystem:i,calendar:r}=e;return[n,i,r]}}function intlConfigString(t,e,s){return s||e?(t.includes("-u-")||(t+="-u"),s&&(t+=`-ca-${s}`),e&&(t+=`-nu-${e}`),t):t}function mapMonths(t){const e=[];for(let s=1;s<=12;s++){const n=DateTime.utc(2009,s,1);e.push(t(n))}return e}function mapWeekdays(t){const e=[];for(let s=1;s<=7;s++){const n=DateTime.utc(2016,11,13+s);e.push(t(n))}return e}function listStuff(t,e,s,n){const i=t.listingMode();return"error"===i?null:"en"===i?s(e):n(e)}function supportsFastNumbers(t){return(!t.numberingSystem||"latn"===t.numberingSystem)&&("latn"===t.numberingSystem||!t.locale||t.locale.startsWith("en")||"latn"===new Intl.DateTimeFormat(t.intl).resolvedOptions().numberingSystem)}class PolyNumberFormatter{constructor(t,e,s){this.padTo=s.padTo||0,this.floor=s.floor||!1;const{padTo:n,floor:i,...r}=s;if(!e||Object.keys(r).length>0){const e={useGrouping:!1,...s};s.padTo>0&&(e.minimumIntegerDigits=s.padTo),this.inf=getCachedINF(t,e)}}format(t){if(this.inf){const e=this.floor?Math.floor(t):t;return this.inf.format(e)}{const e=this.floor?Math.floor(t):roundTo(t,3);return padStart(e,this.padTo)}}}class PolyDateFormatter{constructor(t,e,s){let n;if(this.opts=s,this.originalZone=void 0,this.opts.timeZone)this.dt=t;else if("fixed"===t.zone.type){const e=t.offset/60*-1,s=e>=0?`Etc/GMT+${e}`:`Etc/GMT${e}`;0!==t.offset&&IANAZone.create(s).valid?(n=s,this.dt=t):(n="UTC",this.dt=0===t.offset?t:t.setZone("UTC").plus({minutes:t.offset}),this.originalZone=t.zone)}else"system"===t.zone.type?this.dt=t:"iana"===t.zone.type?(this.dt=t,n=t.zone.name):(n="UTC",this.dt=t.setZone("UTC").plus({minutes:t.offset}),this.originalZone=t.zone);const i={...this.opts};i.timeZone=i.timeZone||n,this.dtf=getCachedDTF(e,i)}format(){return this.originalZone?this.formatToParts().map((({value:t})=>t)).join(""):this.dtf.format(this.dt.toJSDate())}formatToParts(){const t=this.dtf.formatToParts(this.dt.toJSDate());return this.originalZone?t.map((t=>{if("timeZoneName"===t.type){const e=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return{...t,value:e}}return t})):t}resolvedOptions(){return this.dtf.resolvedOptions()}}class PolyRelFormatter{constructor(t,e,s){this.opts={style:"long",...s},!e&&hasRelative()&&(this.rtf=getCachedRTF(t,s))}format(t,e){return this.rtf?this.rtf.format(t,e):English.formatRelativeTime(e,t,this.opts.numeric,"long"!==this.opts.style)}formatToParts(t,e){return this.rtf?this.rtf.formatToParts(t,e):[]}}export default class Locale{static fromOpts(t){return Locale.create(t.locale,t.numberingSystem,t.outputCalendar,t.defaultToEN)}static create(t,e,s,n=!1){const i=t||Settings.defaultLocale,r=i||(n?"en-US":systemLocale()),a=e||Settings.defaultNumberingSystem,o=s||Settings.defaultOutputCalendar;return new Locale(r,a,o,i)}static resetCache(){sysLocaleCache=null,intlDTCache={},intlNumCache={},intlRelCache={}}static fromObject({locale:t,numberingSystem:e,outputCalendar:s}={}){return Locale.create(t,e,s)}constructor(t,e,s,n){const[i,r,a]=parseLocaleString(t);this.locale=i,this.numberingSystem=e||r||null,this.outputCalendar=s||a||null,this.intl=intlConfigString(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=n,this.fastNumbersCached=null}get fastNumbers(){return null==this.fastNumbersCached&&(this.fastNumbersCached=supportsFastNumbers(this)),this.fastNumbersCached}listingMode(){const t=this.isEnglish(),e=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return t&&e?"en":"intl"}clone(t){return t&&0!==Object.getOwnPropertyNames(t).length?Locale.create(t.locale||this.specifiedLocale,t.numberingSystem||this.numberingSystem,t.outputCalendar||this.outputCalendar,t.defaultToEN||!1):this}redefaultToEN(t={}){return this.clone({...t,defaultToEN:!0})}redefaultToSystem(t={}){return this.clone({...t,defaultToEN:!1})}months(t,e=!1){return listStuff(this,t,English.months,(()=>{const s=e?{month:t,day:"numeric"}:{month:t},n=e?"format":"standalone";return this.monthsCache[n][t]||(this.monthsCache[n][t]=mapMonths((t=>this.extract(t,s,"month")))),this.monthsCache[n][t]}))}weekdays(t,e=!1){return listStuff(this,t,English.weekdays,(()=>{const s=e?{weekday:t,year:"numeric",month:"long",day:"numeric"}:{weekday:t},n=e?"format":"standalone";return this.weekdaysCache[n][t]||(this.weekdaysCache[n][t]=mapWeekdays((t=>this.extract(t,s,"weekday")))),this.weekdaysCache[n][t]}))}meridiems(){return listStuff(this,void 0,(()=>English.meridiems),(()=>{if(!this.meridiemCache){const t={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map((e=>this.extract(e,t,"dayperiod")))}return this.meridiemCache}))}eras(t){return listStuff(this,t,English.eras,(()=>{const e={era:t};return this.eraCache[t]||(this.eraCache[t]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map((t=>this.extract(t,e,"era")))),this.eraCache[t]}))}extract(t,e,s){const n=this.dtFormatter(t,e).formatToParts().find((t=>t.type.toLowerCase()===s));return n?n.value:null}numberFormatter(t={}){return new PolyNumberFormatter(this.intl,t.forceSimple||this.fastNumbers,t)}dtFormatter(t,e={}){return new PolyDateFormatter(t,this.intl,e)}relFormatter(t={}){return new PolyRelFormatter(this.intl,this.isEnglish(),t)}listFormatter(t={}){return getCachedLF(this.intl,t)}isEnglish(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")}equals(t){return this.locale===t.locale&&this.numberingSystem===t.numberingSystem&&this.outputCalendar===t.outputCalendar}}
//# sourceMappingURL=/sm/24bf598621a3befbd4e4f3bc630acea766636a3a0f652a460f2d9e07dbcf6a22.map