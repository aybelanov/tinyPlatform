/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/luxon@3.4.3/src/datetime.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Duration from"./duration.js";import Interval from"./interval.js";import Settings from"./settings.js";import Info from"./info.js";import Formatter from"./impl/formatter.js";import FixedOffsetZone from"./zones/fixedOffsetZone.js";import Locale from"./impl/locale.js";import{isUndefined,maybeArray,isDate,isNumber,bestBy,daysInMonth,daysInYear,isLeapYear,weeksInWeekYear,normalizeObject,roundTo,objToLocalTS,padStart}from"./impl/util.js";import{normalizeZone}from"./impl/zoneUtil.js";import diff from"./impl/diff.js";import{parseRFC2822Date,parseISODate,parseHTTPDate,parseSQL}from"./impl/regexParser.js";import{parseFromTokens,explainFromTokens,formatOptsToTokens,expandMacroTokens}from"./impl/tokenParser.js";import{gregorianToWeek,weekToGregorian,gregorianToOrdinal,ordinalToGregorian,hasInvalidGregorianData,hasInvalidWeekData,hasInvalidOrdinalData,hasInvalidTimeData}from"./impl/conversions.js";import*as Formats from"./impl/formats.js";import{InvalidArgumentError,ConflictingSpecificationError,InvalidUnitError,InvalidDateTimeError}from"./errors.js";import Invalid from"./impl/invalid.js";const INVALID="Invalid DateTime",MAX_DATE=864e13;function unsupportedZone(e){return new Invalid("unsupported zone",`the zone "${e.name}" is not supported`)}function possiblyCachedWeekData(e){return null===e.weekData&&(e.weekData=gregorianToWeek(e.c)),e.weekData}function clone(e,t){const i={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new DateTime({...i,...t,old:i})}function fixOffset(e,t,i){let n=e-60*t*1e3;const r=i.offset(n);if(t===r)return[n,t];n-=60*(r-t)*1e3;const a=i.offset(n);return r===a?[n,r]:[e-60*Math.min(r,a)*1e3,Math.max(r,a)]}function tsToObj(e,t){const i=new Date(e+=60*t*1e3);return{year:i.getUTCFullYear(),month:i.getUTCMonth()+1,day:i.getUTCDate(),hour:i.getUTCHours(),minute:i.getUTCMinutes(),second:i.getUTCSeconds(),millisecond:i.getUTCMilliseconds()}}function objToTS(e,t,i){return fixOffset(objToLocalTS(e),t,i)}function adjustTime(e,t){const i=e.o,n=e.c.year+Math.trunc(t.years),r=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),a={...e.c,year:n,month:r,day:Math.min(e.c.day,daysInMonth(n,r))+Math.trunc(t.days)+7*Math.trunc(t.weeks)},s=Duration.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as("milliseconds"),o=objToLocalTS(a);let[l,u]=fixOffset(o,i,e.zone);return 0!==s&&(l+=s,u=e.zone.offset(l)),{ts:l,o:u}}function parseDataToDateTime(e,t,i,n,r,a){const{setZone:s,zone:o}=i;if(e&&0!==Object.keys(e).length||t){const n=t||o,r=DateTime.fromObject(e,{...i,zone:n,specificOffset:a});return s?r:r.setZone(o)}return DateTime.invalid(new Invalid("unparsable",`the input "${r}" can't be parsed as ${n}`))}function toTechFormat(e,t,i=!0){return e.isValid?Formatter.create(Locale.create("en-US"),{allowZ:i,forceSimple:!0}).formatDateTimeFromString(e,t):null}function toISODate(e,t){const i=e.c.year>9999||e.c.year<0;let n="";return i&&e.c.year>=0&&(n+="+"),n+=padStart(e.c.year,i?6:4),t?(n+="-",n+=padStart(e.c.month),n+="-",n+=padStart(e.c.day)):(n+=padStart(e.c.month),n+=padStart(e.c.day)),n}function toISOTime(e,t,i,n,r,a){let s=padStart(e.c.hour);return t?(s+=":",s+=padStart(e.c.minute),0===e.c.millisecond&&0===e.c.second&&i||(s+=":")):s+=padStart(e.c.minute),0===e.c.millisecond&&0===e.c.second&&i||(s+=padStart(e.c.second),0===e.c.millisecond&&n||(s+=".",s+=padStart(e.c.millisecond,3))),r&&(e.isOffsetFixed&&0===e.offset&&!a?s+="Z":e.o<0?(s+="-",s+=padStart(Math.trunc(-e.o/60)),s+=":",s+=padStart(Math.trunc(-e.o%60))):(s+="+",s+=padStart(Math.trunc(e.o/60)),s+=":",s+=padStart(Math.trunc(e.o%60)))),a&&(s+="["+e.zone.ianaName+"]"),s}const defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0},orderedUnits=["year","month","day","hour","minute","second","millisecond"],orderedWeekUnits=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],orderedOrdinalUnits=["year","ordinal","hour","minute","second","millisecond"];function normalizeUnit(e){const t={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(!t)throw new InvalidUnitError(e);return t}function quickDT(e,t){const i=normalizeZone(t.zone,Settings.defaultZone),n=Locale.fromObject(t),r=Settings.now();let a,s;if(isUndefined(e.year))a=r;else{for(const t of orderedUnits)isUndefined(e[t])&&(e[t]=defaultUnitValues[t]);const t=hasInvalidGregorianData(e)||hasInvalidTimeData(e);if(t)return DateTime.invalid(t);const n=i.offset(r);[a,s]=objToTS(e,n,i)}return new DateTime({ts:a,zone:i,loc:n,o:s})}function diffRelative(e,t,i){const n=!!isUndefined(i.round)||i.round,r=(e,r)=>{e=roundTo(e,n||i.calendary?0:2,!0);return t.loc.clone(i).relFormatter(i).format(e,r)},a=n=>i.calendary?t.hasSame(e,n)?0:t.startOf(n).diff(e.startOf(n),n).get(n):t.diff(e,n).get(n);if(i.unit)return r(a(i.unit),i.unit);for(const e of i.units){const t=a(e);if(Math.abs(t)>=1)return r(t,e)}return r(e>t?-0:0,i.units[i.units.length-1])}function lastOpts(e){let t,i={};return e.length>0&&"object"==typeof e[e.length-1]?(i=e[e.length-1],t=Array.from(e).slice(0,e.length-1)):t=Array.from(e),[i,t]}export default class DateTime{constructor(e){const t=e.zone||Settings.defaultZone;let i=e.invalid||(Number.isNaN(e.ts)?new Invalid("invalid input"):null)||(t.isValid?null:unsupportedZone(t));this.ts=isUndefined(e.ts)?Settings.now():e.ts;let n=null,r=null;if(!i){if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t))[n,r]=[e.old.c,e.old.o];else{const e=t.offset(this.ts);n=tsToObj(this.ts,e),i=Number.isNaN(n.year)?new Invalid("invalid input"):null,n=i?null:n,r=i?null:e}}this._zone=t,this.loc=e.loc||Locale.create(),this.invalid=i,this.weekData=null,this.c=n,this.o=r,this.isLuxonDateTime=!0}static now(){return new DateTime({})}static local(){const[e,t]=lastOpts(arguments),[i,n,r,a,s,o,l]=t;return quickDT({year:i,month:n,day:r,hour:a,minute:s,second:o,millisecond:l},e)}static utc(){const[e,t]=lastOpts(arguments),[i,n,r,a,s,o,l]=t;return e.zone=FixedOffsetZone.utcInstance,quickDT({year:i,month:n,day:r,hour:a,minute:s,second:o,millisecond:l},e)}static fromJSDate(e,t={}){const i=isDate(e)?e.valueOf():NaN;if(Number.isNaN(i))return DateTime.invalid("invalid input");const n=normalizeZone(t.zone,Settings.defaultZone);return n.isValid?new DateTime({ts:i,zone:n,loc:Locale.fromObject(t)}):DateTime.invalid(unsupportedZone(n))}static fromMillis(e,t={}){if(isNumber(e))return e<-MAX_DATE||e>MAX_DATE?DateTime.invalid("Timestamp out of range"):new DateTime({ts:e,zone:normalizeZone(t.zone,Settings.defaultZone),loc:Locale.fromObject(t)});throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(isNumber(e))return new DateTime({ts:1e3*e,zone:normalizeZone(t.zone,Settings.defaultZone),loc:Locale.fromObject(t)});throw new InvalidArgumentError("fromSeconds requires a numerical input")}static fromObject(e,t={}){e=e||{};const i=normalizeZone(t.zone,Settings.defaultZone);if(!i.isValid)return DateTime.invalid(unsupportedZone(i));const n=Settings.now(),r=isUndefined(t.specificOffset)?i.offset(n):t.specificOffset,a=normalizeObject(e,normalizeUnit),s=!isUndefined(a.ordinal),o=!isUndefined(a.year),l=!isUndefined(a.month)||!isUndefined(a.day),u=o||l,d=a.weekYear||a.weekNumber,m=Locale.fromObject(t);if((u||s)&&d)throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(l&&s)throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");const c=d||a.weekday&&!u;let h,f,T=tsToObj(n,r);c?(h=orderedWeekUnits,f=defaultWeekUnitValues,T=gregorianToWeek(T)):s?(h=orderedOrdinalUnits,f=defaultOrdinalUnitValues,T=gregorianToOrdinal(T)):(h=orderedUnits,f=defaultUnitValues);let D=!1;for(const e of h){const t=a[e];isUndefined(t)?a[e]=D?f[e]:T[e]:D=!0}const g=(c?hasInvalidWeekData(a):s?hasInvalidOrdinalData(a):hasInvalidGregorianData(a))||hasInvalidTimeData(a);if(g)return DateTime.invalid(g);const S=c?weekToGregorian(a):s?ordinalToGregorian(a):a,[p,y]=objToTS(S,r,i),E=new DateTime({ts:p,zone:i,o:y,loc:m});return a.weekday&&u&&e.weekday!==E.weekday?DateTime.invalid("mismatched weekday",`you can't specify both a weekday of ${a.weekday} and a date of ${E.toISO()}`):E}static fromISO(e,t={}){const[i,n]=parseISODate(e);return parseDataToDateTime(i,n,t,"ISO 8601",e)}static fromRFC2822(e,t={}){const[i,n]=parseRFC2822Date(e);return parseDataToDateTime(i,n,t,"RFC 2822",e)}static fromHTTP(e,t={}){const[i,n]=parseHTTPDate(e);return parseDataToDateTime(i,n,t,"HTTP",t)}static fromFormat(e,t,i={}){if(isUndefined(e)||isUndefined(t))throw new InvalidArgumentError("fromFormat requires an input string and a format");const{locale:n=null,numberingSystem:r=null}=i,a=Locale.fromOpts({locale:n,numberingSystem:r,defaultToEN:!0}),[s,o,l,u]=parseFromTokens(a,e,t);return u?DateTime.invalid(u):parseDataToDateTime(s,o,i,`format ${t}`,e,l)}static fromString(e,t,i={}){return DateTime.fromFormat(e,t,i)}static fromSQL(e,t={}){const[i,n]=parseSQL(e);return parseDataToDateTime(i,n,t,"SQL",e)}static invalid(e,t=null){if(!e)throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");const i=e instanceof Invalid?e:new Invalid(e,t);if(Settings.throwOnInvalid)throw new InvalidDateTimeError(i);return new DateTime({invalid:i})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}static parseFormatForOpts(e,t={}){const i=formatOptsToTokens(e,Locale.fromObject(t));return i?i.map((e=>e?e.val:null)).join(""):null}static expandFormat(e,t={}){return expandMacroTokens(Formatter.parseFormat(e),Locale.fromObject(t)).map((e=>e.val)).join("")}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN}get weekNumber(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN}get weekday(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN}get ordinal(){return this.isValid?gregorianToOrdinal(this.c).ordinal:NaN}get monthShort(){return this.isValid?Info.months("short",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?Info.months("long",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?Info.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Info.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed)return[this];const e=864e5,t=6e4,i=objToLocalTS(this.c),n=this.zone.offset(i-e),r=this.zone.offset(i+e),a=this.zone.offset(i-n*t),s=this.zone.offset(i-r*t);if(a===s)return[this];const o=i-a*t,l=i-s*t,u=tsToObj(o,a),d=tsToObj(l,s);return u.hour===d.hour&&u.minute===d.minute&&u.second===d.second&&u.millisecond===d.millisecond?[clone(this,{ts:o}),clone(this,{ts:l})]:[this]}get isInLeapYear(){return isLeapYear(this.year)}get daysInMonth(){return daysInMonth(this.year,this.month)}get daysInYear(){return this.isValid?daysInYear(this.year):NaN}get weeksInWeekYear(){return this.isValid?weeksInWeekYear(this.weekYear):NaN}resolvedLocaleOptions(e={}){const{locale:t,numberingSystem:i,calendar:n}=Formatter.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:i,outputCalendar:n}}toUTC(e=0,t={}){return this.setZone(FixedOffsetZone.instance(e),t)}toLocal(){return this.setZone(Settings.defaultZone)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:i=!1}={}){if((e=normalizeZone(e,Settings.defaultZone)).equals(this.zone))return this;if(e.isValid){let n=this.ts;if(t||i){const t=e.offset(this.ts),i=this.toObject();[n]=objToTS(i,t,e)}return clone(this,{ts:n,zone:e})}return DateTime.invalid(unsupportedZone(e))}reconfigure({locale:e,numberingSystem:t,outputCalendar:i}={}){return clone(this,{loc:this.loc.clone({locale:e,numberingSystem:t,outputCalendar:i})})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const t=normalizeObject(e,normalizeUnit),i=!isUndefined(t.weekYear)||!isUndefined(t.weekNumber)||!isUndefined(t.weekday),n=!isUndefined(t.ordinal),r=!isUndefined(t.year),a=!isUndefined(t.month)||!isUndefined(t.day),s=r||a,o=t.weekYear||t.weekNumber;if((s||n)&&o)throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(a&&n)throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");let l;i?l=weekToGregorian({...gregorianToWeek(this.c),...t}):isUndefined(t.ordinal)?(l={...this.toObject(),...t},isUndefined(t.day)&&(l.day=Math.min(daysInMonth(l.year,l.month),l.day))):l=ordinalToGregorian({...gregorianToOrdinal(this.c),...t});const[u,d]=objToTS(l,this.o,this.zone);return clone(this,{ts:u,o:d})}plus(e){if(!this.isValid)return this;return clone(this,adjustTime(this,Duration.fromDurationLike(e)))}minus(e){if(!this.isValid)return this;return clone(this,adjustTime(this,Duration.fromDurationLike(e).negate()))}startOf(e){if(!this.isValid)return this;const t={},i=Duration.normalizeUnit(e);switch(i){case"years":t.month=1;case"quarters":case"months":t.day=1;case"weeks":case"days":t.hour=0;case"hours":t.minute=0;case"minutes":t.second=0;case"seconds":t.millisecond=0}if("weeks"===i&&(t.weekday=1),"quarters"===i){const e=Math.ceil(this.month/3);t.month=3*(e-1)+1}return this.set(t)}endOf(e){return this.isValid?this.plus({[e]:1}).startOf(e).minus(1):this}toFormat(e,t={}){return this.isValid?Formatter.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):INVALID}toLocaleString(e=Formats.DATE_SHORT,t={}){return this.isValid?Formatter.create(this.loc.clone(t),e).formatDateTime(this):INVALID}toLocaleParts(e={}){return this.isValid?Formatter.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:i=!1,includeOffset:n=!0,extendedZone:r=!1}={}){if(!this.isValid)return null;const a="extended"===e;let s=toISODate(this,a);return s+="T",s+=toISOTime(this,a,t,i,n,r),s}toISODate({format:e="extended"}={}){return this.isValid?toISODate(this,"extended"===e):null}toISOWeekDate(){return toTechFormat(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:i=!0,includePrefix:n=!1,extendedZone:r=!1,format:a="extended"}={}){if(!this.isValid)return null;return(n?"T":"")+toISOTime(this,"extended"===a,t,e,i,r)}toRFC2822(){return toTechFormat(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return toTechFormat(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?toISODate(this,!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:i=!0}={}){let n="HH:mm:ss.SSS";return(t||e)&&(i&&(n+=" "),t?n+="z":e&&(n+="ZZ")),toTechFormat(this,n,!0)}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():INVALID}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t={...this.c};return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t="milliseconds",i={}){if(!this.isValid||!e.isValid)return Duration.invalid("created by diffing an invalid DateTime");const n={locale:this.locale,numberingSystem:this.numberingSystem,...i},r=maybeArray(t).map(Duration.normalizeUnit),a=e.valueOf()>this.valueOf(),s=diff(a?this:e,a?e:this,r,n);return a?s.negate():s}diffNow(e="milliseconds",t={}){return this.diff(DateTime.now(),e,t)}until(e){return this.isValid?Interval.fromDateTimes(this,e):this}hasSame(e,t){if(!this.isValid)return!1;const i=e.valueOf(),n=this.setZone(e.zone,{keepLocalTime:!0});return n.startOf(t)<=i&&i<=n.endOf(t)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;const t=e.base||DateTime.fromObject({},{zone:this.zone}),i=e.padding?this<t?-e.padding:e.padding:0;let n=["years","months","days","hours","minutes","seconds"],r=e.unit;return Array.isArray(e.unit)&&(n=e.unit,r=void 0),diffRelative(t,this.plus(i),{...e,numeric:"always",units:n,unit:r})}toRelativeCalendar(e={}){return this.isValid?diffRelative(e.base||DateTime.fromObject({},{zone:this.zone}),this,{...e,numeric:"auto",units:["years","months","days"],calendary:!0}):null}static min(...e){if(!e.every(DateTime.isDateTime))throw new InvalidArgumentError("min requires all arguments be DateTimes");return bestBy(e,(e=>e.valueOf()),Math.min)}static max(...e){if(!e.every(DateTime.isDateTime))throw new InvalidArgumentError("max requires all arguments be DateTimes");return bestBy(e,(e=>e.valueOf()),Math.max)}static fromFormatExplain(e,t,i={}){const{locale:n=null,numberingSystem:r=null}=i,a=Locale.fromOpts({locale:n,numberingSystem:r,defaultToEN:!0});return explainFromTokens(a,e,t)}static fromStringExplain(e,t,i={}){return DateTime.fromFormatExplain(e,t,i)}static get DATE_SHORT(){return Formats.DATE_SHORT}static get DATE_MED(){return Formats.DATE_MED}static get DATE_MED_WITH_WEEKDAY(){return Formats.DATE_MED_WITH_WEEKDAY}static get DATE_FULL(){return Formats.DATE_FULL}static get DATE_HUGE(){return Formats.DATE_HUGE}static get TIME_SIMPLE(){return Formats.TIME_SIMPLE}static get TIME_WITH_SECONDS(){return Formats.TIME_WITH_SECONDS}static get TIME_WITH_SHORT_OFFSET(){return Formats.TIME_WITH_SHORT_OFFSET}static get TIME_WITH_LONG_OFFSET(){return Formats.TIME_WITH_LONG_OFFSET}static get TIME_24_SIMPLE(){return Formats.TIME_24_SIMPLE}static get TIME_24_WITH_SECONDS(){return Formats.TIME_24_WITH_SECONDS}static get TIME_24_WITH_SHORT_OFFSET(){return Formats.TIME_24_WITH_SHORT_OFFSET}static get TIME_24_WITH_LONG_OFFSET(){return Formats.TIME_24_WITH_LONG_OFFSET}static get DATETIME_SHORT(){return Formats.DATETIME_SHORT}static get DATETIME_SHORT_WITH_SECONDS(){return Formats.DATETIME_SHORT_WITH_SECONDS}static get DATETIME_MED(){return Formats.DATETIME_MED}static get DATETIME_MED_WITH_SECONDS(){return Formats.DATETIME_MED_WITH_SECONDS}static get DATETIME_MED_WITH_WEEKDAY(){return Formats.DATETIME_MED_WITH_WEEKDAY}static get DATETIME_FULL(){return Formats.DATETIME_FULL}static get DATETIME_FULL_WITH_SECONDS(){return Formats.DATETIME_FULL_WITH_SECONDS}static get DATETIME_HUGE(){return Formats.DATETIME_HUGE}static get DATETIME_HUGE_WITH_SECONDS(){return Formats.DATETIME_HUGE_WITH_SECONDS}}export function friendlyDateTime(e){if(DateTime.isDateTime(e))return e;if(e&&e.valueOf&&isNumber(e.valueOf()))return DateTime.fromJSDate(e);if(e&&"object"==typeof e)return DateTime.fromObject(e);throw new InvalidArgumentError(`Unknown datetime argument: ${e}, of type ${typeof e}`)}
//# sourceMappingURL=/sm/02112e33f56743f94bfdb63b5b3e79a431289453fb7ad45a38cf6aa6c21c7d65.map