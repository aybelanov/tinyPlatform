<RadzenTemplateForm TItem="DeviceModel" Data="@Model" Submit="@ChangePassword">
   <TinyPassword @bind-Value=@Model.Password MaxLength="100" MinLength="5" Disabled=@_disabled Placeholder="@T["Device.Password.New.Placeholder"]"></TinyPassword>
   <div class="row row-cols-1 justify-content-center text-truncate mt-3">
      <RadzenButton ButtonType="ButtonType.Submit" Icon="change_circle" Text="@T["Button.Change"]" ButtonStyle="ButtonStyle.Primary" title="@T["Device.Password.Change.Hint"]" class="mr-3" />
   </div>
</RadzenTemplateForm>

@code {

   [Parameter] public DeviceModel Model { get; set; }
   [Parameter] public DialogService Dialog { get; set; }

   [Inject] IDeviceService DeviceService { get; set; }
   [Inject] NotificationService Notification { get; set; }

   private bool _disabled;

   private async Task ChangePassword(DeviceModel model)
   {
      try
      {
         _disabled = true;
         await DeviceService.ChangePassword(Model.Id, model.Password);
         Notification.Notify(NotificationSeverity.Success, T["Device.Password.HasChanged"]);
         Dialog.Close(true);
      }
      catch (Exception ex)
      {
         await ErrorService.HandleError(this, ex);
      }
      _disabled = false;
   }
}
